import datetime

import demistomock as demisto  # noqa: F401
from CommonServerPython import *  # noqa: F401

hosts = demisto.args()['hosts']
vuln_summary = demisto.args()['vuln_summary']
excludeList = demisto.args()['excludeList']
current_id = demisto.args()['incidentID']
monthlyPatchExclusion = demisto.args()['patchExclusion']

today = datetime.datetime.utcnow().strftime("%Y-%m-%dT%H:%M:%S-05:00")
##################
for host, details in hosts.items():
    name = '{} Vulnerability Report'.format(host)
    exclude = []
    # Do not create new incident if currently open
    if host in excludeList:
        exclude += excludeList[host]
    if monthlyPatchExclusion:
        exclude += monthlyPatchExclusion
    if exclude:
        details['tenIDs'] = [tenID for tenID in details['tenIDs'] if tenID not in exclude]

    # skip the rest of the loop if nothing new
    if not details['tenIDs']:
        continue

    incArgs = {
        "name": name,
        "type": "Tenable Host Enrichment",
        'tenablehost': details['IP'],
        'tenableports': '0',
        'tenablemac': details['MAC'],
        'details': hosts[host]['cves'],
        'opentenableids': ','.join(details['tenIDs']),
        'src': details['IP']
    }
    inc = demisto.executeCommand("createNewIncident", incArgs)[0]['EntryContext']['CreatedIncidentID']
    demisto.results(str(inc))

    host_score = 0
    html = ''

    for tenID in details['tenIDs']:
        # Create indicator for newly created incident
        # with details from vuln_summary
        v = vuln_summary[tenID]
        sev = v['Sev']

        if sev == 'Critical':
            host_score += 21
            score = 'Bad'
        elif sev == 'High':
            host_score += 8
            score = 'Suspicious'
        elif sev == 'Medium':
            host_score += 3
            score = 'Suspicious'
        elif sev == 'Low' or 'Info':
            host_score += 1
            score = 'Good'

        comment = v['tenSyn'] + '\n\r' + v['tenDesc']

        if 'tenSol' in v:
            tmp = '\n\r' + v['tenSol']
            comment += tmp

        dArgs = {
            'relatedIncidents': inc + ',' + current_id,
            'type': 'TenableID',
            'value': tenID,
            'reputation': score,
            'comment': comment,
            'lastseen': today,
            'updateddate': today,
            'merge': False,
            'ipaddress': host
        }
        # demisto.results(str(today))
        demisto.executeCommand("createNewIndicator", dArgs)
        #t = demisto.executeCommand("demisto-api-post", {"uri":"/indicator/create", "body": dArgs})
        # demisto.results(str(t))
    if host_score >= 80:
        color = 'white'
    elif 50 <= host_score < 80:
        color = 'red'
    elif 20 <= host_score < 50:
        color = 'yellow'
    else:
        color = 'green'

    html = '<html><h1 style=\'font-size: 5em\';color:{}>{}</h1></html>'.format(color, host_score)
    demisto.executeCommand("setIncident", {'id': inc, 'hostscore': host_score, 'hostscorehtml': html})
