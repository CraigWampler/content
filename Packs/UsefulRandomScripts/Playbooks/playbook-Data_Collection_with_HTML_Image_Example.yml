contentitemexportablefields:
  contentitemfields:
    propagationLabels:
    - all
description: "Example playbook, this will take images attached, base64 encode them\
  \ to context, create html for those, and send an email with the html body containing\
  \ those images.\n\nIdea being you can insert those images into an email body or\
  \ even an Ask Task.   Each step in the playbook has details explaining what it's\
  \ doing. "
id: Data Collection with HTML Image Example
inputs: []
name: Data Collection with HTML Image Example
outputs: []
starttaskid: "0"
tasks:
  "0":
    id: "0"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "12"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: d9153971-723a-463f-800e-cdcbdc14e3c1
      iscommand: false
      name: ""
      version: -1
      description: ''
    taskid: d9153971-723a-463f-800e-cdcbdc14e3c1
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 265,
          "y": 50
        }
      }
  "3":
    id: "3"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "13"
    note: false
    quietmode: 0
    scriptarguments:
      entryId:
        complex:
          accessor: EntryID
          filters:
          - - left:
                iscontext: true
                value:
                  simple: InfoFile.Name
              operator: isEqualString
              right:
                value:
                  simple: email.png
          root: InfoFile
          transformers:
          - operator: uniq
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: |-
        Takes an image file and converts it into base64 encoded HTML image. Can be displayed in the incident summary inside an HTML field.

        **IMPORTANT**: When storing base64 file data inside an incident field, make sure the checkbox for 'make available for search' is UNCHECKED. Or else the amount of data could have significant impacts on disk usage.

        Supported files are 'png, jpeg, gif, bmp, svg, tiff, webp'
      id: 95d829cd-4581-430c-8d92-0edfe8fafa7b
      iscommand: false
      name: Create HTML Image with the email.png file
      script: eeccff31-d0ca-497f-8c1f-ecdc954be9b7
      type: regular
      version: -1
    taskid: 95d829cd-4581-430c-8d92-0edfe8fafa7b
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 470,
          "y": 545
        }
      }
  "5":
    form:
      description: Smile!
      expired: false
      questions:
      - defaultrows: []
        fieldassociated: ""
        gridcolumns: []
        id: "0"
        label: ""
        labelarg:
          complex:
            root: Base64Files
            transformers:
            - args:
                prefix:
                  value:
                    simple: '![Email](data:image/png;base64,'
                suffix:
                  value:
                    simple: |
                      )
              operator: concat
            - args:
                separator:
                  value:
                    simple: |2+

              operator: join
            - args:
                prefix:
                  value:
                    simple: |
                      Are these the images you're looking for?
                suffix: {}
              operator: concat
        options: []
        optionsarg:
        - {}
        - simple: "Yes"
        - simple: "No"
        placeholder: ""
        readonly: false
        required: true
        tooltip: ""
        type: singleSelect
      sender: ""
      title: Picture is worth a thousand words!
      totalanswers: 0
    id: "5"
    ignoreworker: false
    message:
      bcc:
      body:
        complex:
          root: ImageFileToHTML
          transformers:
          - args:
              separator:
                value:
                  simple: <br><br>
            operator: join
          - args:
              prefix:
                value:
                  simple: Email Images<br><br>
              suffix: {}
            operator: concat
      cc:
      format: html
      methods:
      - email
      subject:
        simple: Is this the Image you're looking for?
      timings:
        completeafterreplies: 1
        retriescount: 2
        retriesinterval: 360
      to:
        complex:
          accessor: "0"
          root: Email.Answers
    nexttasks:
      '#none#':
      - "9"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: d6687b4e-68b2-426f-84f5-397fac14fcd4
      iscommand: false
      name: Data Collection - Is this the image you're looking for?
      type: collection
      version: -1
    taskid: d6687b4e-68b2-426f-84f5-397fac14fcd4
    timertriggers: []
    type: collection
    view: |-
      {
        "position": {
          "x": 470,
          "y": 1070
        }
      }
  "7":
    id: "7"
    ignoreworker: false
    note: false
    quietmode: 0
    scriptarguments:
      assetid: {}
      closeNotes:
        simple: Email sent
      closeReason:
        simple: Resolved
      emailclassification: {}
      id: {}
      phishingsubtype: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: commands.local.cmd.close.inv
      id: 01fe6ca5-4d49-4c4a-81c0-bf653b6354a2
      iscommand: true
      name: 'Fin. '
      script: Builtin|||closeInvestigation
      type: regular
      version: -1
    taskid: 01fe6ca5-4d49-4c4a-81c0-bf653b6354a2
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 480,
          "y": 1420
        }
      }
  "8":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                filters:
                - - left:
                      iscontext: true
                      value:
                        simple: InfoFile.Name
                    operator: isEqualString
                    right:
                      value:
                        simple: email.png
                root: InfoFile.Name
          operator: isExists
      label: "yes"
    id: "8"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "10"
      "yes":
      - "3"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: 'Upload some png or jpeg files to the war room, or if you attached
        manually, complete this task to continue. '
      id: 3aa13c20-0d73-4895-8679-986dc58a3ba9
      iscommand: false
      name: Are there rasterized email image files in context?
      type: condition
      version: -1
    taskid: 3aa13c20-0d73-4895-8679-986dc58a3ba9
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 265,
          "y": 370
        }
      }
  "9":
    conditions:
    - condition:
      - - ignorecase: true
          left:
            iscontext: true
            value:
              simple: Picture is worth a thousand words!.Answers.0
          operator: isEqualString
          right:
            value:
              simple: "yes"
      label: "yes"
    id: "9"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "10"
      "yes":
      - "7"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: fe645efe-023b-4661-8e9b-9ca631f4bd85
      iscommand: false
      name: Did they see the picture?
      type: condition
      version: -1
    taskid: fe645efe-023b-4661-8e9b-9ca631f4bd85
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 470,
          "y": 1245
        }
      }
  "10":
    id: "10"
    ignoreworker: false
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: d6e259a0-65a6-4915-8751-af542f6c6825
      iscommand: false
      name: Something went wrong.
      type: regular
      version: -1
    taskid: d6e259a0-65a6-4915-8751-af542f6c6825
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1420
        }
      }
  "11":
    form:
      description: Email
      expired: false
      questions:
      - defaultrows: []
        fieldassociated: ""
        gridcolumns: []
        id: "0"
        label: ""
        labelarg:
          simple: Email
        options: []
        optionsarg: []
        placeholder: ""
        readonly: false
        required: true
        tooltip: 'Your email is probably the one you want. '
        type: shortText
      sender: ""
      title: Email
      totalanswers: 0
    id: "11"
    ignoreworker: false
    message:
      bcc:
      body:
        simple: Who do you want to email?
      cc:
      format: ""
      methods: []
      subject:
      timings:
        completeafterreplies: 1
        retriescount: 2
        retriesinterval: 360
      to:
    nexttasks:
      '#none#':
      - "5"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: b59cd378-e86e-49b8-83a2-73b68d773072
      iscommand: false
      name: Ask for the Email to send to
      type: collection
      version: -1
    taskid: b59cd378-e86e-49b8-83a2-73b68d773072
    timertriggers: []
    type: collection
    view: |-
      {
        "position": {
          "x": 470,
          "y": 895
        }
      }
  "12":
    id: "12"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "8"
    note: false
    quietmode: 0
    scriptarguments:
      height: {}
      htmlBody:
        simple: |-
          <h1>Example Email To Rasterize</h1>
          <br>
          <br>
          <b>Will put this into a data collection task<b>
          <br>
          <p>As an example of what someone might use this for<p>
      offline: {}
      type: {}
      width: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Rasterize
      description: Converts the body of an email to an image file or a PDF file.
      id: 5979c4f3-cd38-49d2-808f-2f135e9f1279
      iscommand: true
      name: Rasterize Email HTML Body
      script: Rasterize|||rasterize-email
      type: regular
      version: -1
    taskid: 5979c4f3-cd38-49d2-808f-2f135e9f1279
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 265,
          "y": 195
        }
      }
  "13":
    id: "13"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "11"
    note: false
    quietmode: 0
    scriptarguments:
      entryId:
        complex:
          accessor: EntryID
          filters:
          - - left:
                iscontext: true
                value:
                  simple: InfoFile.Name
              operator: isEqualString
              right:
                value:
                  simple: email.png
          root: InfoFile
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: |
        Encode a file as base64 and store it in context
      id: a7a0d1de-ac44-40e2-89e0-66c62c9c0690
      iscommand: false
      name: 'Base64 the email.png image so we can drop it in the Data Collection layout '
      script: 25b3a0e5-547a-42fe-8932-5f7969dfca15
      type: regular
      version: -1
    taskid: a7a0d1de-ac44-40e2-89e0-66c62c9c0690
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 470,
          "y": 720
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1465,
        "width": 810,
        "x": 50,
        "y": 50
      }
    }
  }
tests:
- No tests (auto formatted)
fromversion: 6.0.0
