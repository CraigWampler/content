contentitemexportablefields:
  contentitemfields:
    propagationLabels:
    - all
description: |-
  This playbook investigates the following Prisma Cloud AWS public S3 bucket alerts.

  Prisma Cloud policies investigated:
  -AWS Access logging not enabled on S3 buckets
  -AWS S3 buckets are accessible to public
  -AWS S3 buckets do not have server side encryption
  -AWS S3 Object Versioning is disabled
  -AWS S3 CloudTrail buckets for which access logging is disabled
  -AWS S3 Bucket Policy allows public access to CloudTrail logs
id: Prisma Cloud Flow - AWS Public S3 investigation
inputs:
- description: Get the Prisma Cloud policy ID.
  key: policyId
  playbookInputQuery:
  required: true
  value:
    simple: ${incident.policyid}
name: Prisma Cloud Flow - AWS Public S3 investigation
outputs: []
starttaskid: "0"
tasks:
  "0":
    id: "0"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "10"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 972c2cba-e9e8-4b4e-8f92-407ca7fb7917
      iscommand: false
      name: ""
      version: -1
      description: ''
    taskid: 972c2cba-e9e8-4b4e-8f92-407ca7fb7917
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 690,
          "y": -180
        }
      }
  "10":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                accessor: policyid
                root: incident
          operator: isEqualString
          right:
            value:
              simple: 4daa435b-fa46-457a-9359-6a4b4a43a442
      label: AWS Access logging not enabled on S3 buckets
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                accessor: policyid
                root: incident
          operator: isEqualString
          right:
            value:
              simple: 630d3779-d932-4fbf-9cce-6e8d793c6916
      label: AWS S3 buckets are accessible to public
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                accessor: policyid
                root: incident
          operator: isEqualString
          right:
            value:
              simple: 7913fcbf-b679-5aac-d979-1b6817becb22
      label: AWS S3 buckets do not have server side encryption
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                accessor: policyid
                root: incident
          operator: isEqualString
          right:
            value:
              simple: 89ea62c1-3845-4134-b337-cc82203b8ff9
      label: AWS S3 Object Versioning is disabled
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                accessor: policyid
                root: incident
          operator: isEqualString
          right:
            value:
              simple: 3f141560-9cfc-412a-96cc-2768edfd23ad
      label: AWS S3 CloudTrail buckets for which access logging is disabled
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                accessor: policyid
                root: incident
          operator: isEqualString
          right:
            value:
              simple: a5fe47e1-54f3-47e1-a2a3-deedfb2f70b2
      label: AWS S3 Bucket Policy allows public access to CloudTrail logs
    id: "10"
    ignoreworker: false
    nexttasks:
      AWS Access logging not enabled on S3 buckets:
      - "31"
      AWS S3 Bucket Policy allows public access to CloudTrail logs:
      - "33"
      AWS S3 CloudTrail buckets for which access logging is disabled:
      - "34"
      AWS S3 Object Versioning is disabled:
      - "30"
      AWS S3 buckets are accessible to public:
      - "26"
      AWS S3 buckets do not have server side encryption:
      - "32"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: 'Based on the Prisma Cloud policy ID, determine which S3 security
        issue to pursue. '
      id: 5502fcd1-9708-466f-8b43-0be58935676f
      iscommand: false
      name: Get Prisma Cloud policy id
      type: condition
      version: -1
    taskid: 5502fcd1-9708-466f-8b43-0be58935676f
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 690,
          "y": -30
        }
      }
  "12":
    id: "12"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "22"
    note: false
    quietmode: 0
    scriptarguments:
      attributes: {}
      custom-field-data: {}
      custom-field-type: {}
      dn: {}
      email: {}
      limit: {}
      name:
        simple: ${incident.accountname}
      user-account-control-out: {}
      username: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Active Directory Query v2
      description: Retrieves detailed information about a user account. The user can
        be specified by name, email address, or as an Active Directory Distinguished
        Name (DN). If no filter is specified, all users are returned.
      id: 5fac593f-09d7-4e4e-803a-313c94cfad02
      iscommand: true
      name: ad-get-user-AWS-account-name
      script: Active Directory Query v2|||ad-get-user
      type: regular
      version: -1
    taskid: 5fac593f-09d7-4e4e-803a-313c94cfad02
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -880,
          "y": 590
        }
      }
  "22":
    id: "22"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "28"
    note: false
    quietmode: 0
    scriptarguments:
      attributes: {}
      custom-field-data: {}
      custom-field-type: {}
      dn:
        simple: ${ActiveDirectory.Users.manager}
      email: {}
      limit: {}
      name: {}
      user-account-control-out: {}
      username: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Active Directory Query v2
      description: Retrieves detailed information about a user account. The user can
        be specified by name, email address, or as an Active Directory Distinguished
        Name (DN). If no filter is specified, all users are returned.
      id: f168f164-5577-4629-8f0c-30e60d5ba2bc
      iscommand: true
      name: ad-get-user-AWS-find-manager
      script: Active Directory Query v2|||ad-get-user
      type: regular
      version: -1
    taskid: f168f164-5577-4629-8f0c-30e60d5ba2bc
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -880,
          "y": 760
        }
      }
  "23":
    id: "23"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "71"
    note: false
    quietmode: 0
    scriptarguments:
      additionalHeader: {}
      attachCIDs: {}
      attachIDs: {}
      attachNames: {}
      bcc: {}
      body:
        simple: "Your name has been associated with a public S3 bucket in AWS that\
          \ is unauthorized. \nPlease call the SOC at 1-800-222-3333.  \n\nPOLICY:\
          \ ${incident.policyname} \nS3 Bucket Name:  ${incident.bucketname}\nS3 URL:\
          \  ${incident.s3url} \nS3 Owner:   ${incident.accountname}\nAccountID: \
          \  ${incident.accountid}\nPrisma Alert ID: ${incident.prismacloudid}\nAdmin\
          \ AWS URL: ${incident.url}  "
      cc: {}
      htmlBody: {}
      raw_message: {}
      replyTo: {}
      subject:
        simple: ALERT!!!! ${incident.policyname}
      templateParams: {}
      to:
        complex:
          accessor: Email
          filters:
          - - left:
                iscontext: true
                value:
                  simple: Account.Email.Address
              operator: isNotExists
          root: Account
      transientFile: {}
      transientFileCID: {}
      transientFileContent: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Mail Sender (New)
      description: Send an email
      id: b45e71bd-845f-4d8e-8b49-743c0d5f6d5b
      iscommand: true
      name: send-email-to-S3-owner-and-manager
      script: Mail Sender (New)|||send-mail
      type: regular
      version: -1
    taskid: b45e71bd-845f-4d8e-8b49-743c0d5f6d5b
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -880,
          "y": 1130
        }
      }
  "24":
    id: "24"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "12"
    note: false
    quietmode: 0
    scriptarguments:
      accountgroups: {}
      accountid: {}
      accountname: {}
      activedirectoryaccountstatus: {}
      activedirectorydisplayname: {}
      activedirectorypasswordstatus: {}
      addLabels: {}
      affecteddata: {}
      affecteddatatype: {}
      affectedindividualscontactinformation: {}
      agentid: {}
      app: {}
      approximatenumberofaffecteddatasubjects: {}
      arn: {}
      assetid: {}
      attachmentcount: {}
      attachmentextension: {}
      attachmenthash: {}
      attachmentid: {}
      attachmentname: {}
      attachmentsize: {}
      attachmenttype: {}
      az: {}
      blockedaction: {}
      bucketname: {}
      bugtraq: {}
      cidrblock: {}
      city: {}
      clarotyalertresolved: {}
      clarotyalerttype: {}
      clarotycategory: {}
      clarotynetworkid: {}
      clarotyrelatedassets: {}
      clarotyresourceid: {}
      clarotysiteid: {}
      closeNotes: {}
      closeReason: {}
      code42alerttype: {}
      code42fileevents: {}
      commandline: {}
      companyaddress: {}
      companycity: {}
      companycountry: {}
      companyhasinsuranceforthebreach: {}
      companyname: {}
      companypostalcode: {}
      companypropertystatus: {}
      contactaddress: {}
      contactname: {}
      coordinates: {}
      country: {}
      countrywherebusinesshasitsmainestablishment: {}
      countrywherethebreachtookplace: {}
      criticalassets: {}
      customFields: {}
      cve: {}
      cvss: {}
      cymulateimmediatethreatsattackid: {}
      cymulateimmediatethreatsfiletype: {}
      cymulateimmediatethreatsid: {}
      cymulateimmediatethreatsmitigations: {}
      cymulateimmediatethreatsmodule: {}
      cymulateimmediatethreatspayloadname: {}
      cymulateimmediatethreatsstatus: {}
      cymulateimmediatethreatsvector: {}
      dataencryptionstatus: {}
      datetimeofthebreach: {}
      dbotprediction: {}
      dbotpredictionprobability: {}
      dbottextsuggestionhighlighted: {}
      deleteEmptyField: {}
      dest: {}
      desthostname: {}
      destinationip: {}
      destntdomain: {}
      destos: {}
      details: {}
      detectionendtime: {}
      detectionid: {}
      detectionticketed: {}
      detectionupdatetime: {}
      detectionurl: {}
      devicegsuiteaccountstatus: {}
      devicename: {}
      dpoemailaddress: {}
      duoaccountstatus: {}
      duration: {}
      emailaddress: {}
      emailauthenticitycheck: {}
      emailautoreply: {}
      emailbcc: {}
      emailbody: {}
      emailbodyformat: {}
      emailbodyhtml: {}
      emailcc: {}
      emailclassification: {}
      emailclientname: {}
      emailfrom: {}
      emailheaders: {}
      emailhtml: {}
      emailinreplyto: {}
      emailkeywords: {}
      emailmessageid: {}
      emailreceived: {}
      emailreplyto: {}
      emailreturnpath: {}
      emailsenderip: {}
      emailsize: {}
      emailsource: {}
      emailsubject: {}
      emailto: {}
      emailtocount: {}
      emailurlclicked: {}
      employeedisplayname: {}
      employeeemail: {}
      employeemanageremail: {}
      exfiltratedfiles: {}
      expanseexposuretype: {}
      expanserawjsonevent: {}
      expanseseverity: {}
      extrahopapplianceid: {}
      extrahophostname: {}
      filehash: {}
      filename: {}
      filepath: {}
      filesize: {}
      firstseen: {}
      globaldirectoryvisibility: {}
      googleaccountstatus: {}
      googleadminrolesstatus: {}
      googledisplayname: {}
      googledrivestatus: {}
      googlemailstatus: {}
      googlepasswordstatus: {}
      helloworldid: {}
      helloworldstatus: {}
      helloworldtype: {}
      hostname: {}
      id: {}
      indenideviceid: {}
      indeniissueid: {}
      infectedhosts: {}
      investigationstage: {}
      isolated: {}
      isthedatasubjecttodpia: {}
      labels: {}
      lastmodifiedby: {}
      lastmodifiedon: {}
      lastseen: {}
      likelyimpact: {}
      loginattemptcount: {}
      macaddress: {}
      mailboxdelegation: {}
      maliciousbehavior: {}
      maliciouscauseifthecauseisamaliciousattack: {}
      malwarefamily: {}
      measurestomitigate: {}
      name: {}
      niststage: {}
      occurred: {}
      offboardingdate: {}
      offboardingstage: {}
      oktaaccountstatus: {}
      owner: {}
      parentprocessid: {}
      participants: {}
      passwordexpirationstatus: {}
      phase: {}
      phishingsubtype: {}
      pid: {}
      policydeleted: {}
      policydescription: {}
      policydetails: {}
      policyid: {}
      policyname: {}
      policyrecommendation: {}
      policyremediable: {}
      policyseverity: {}
      policytype: {}
      possiblecauseofthebreach: {}
      postalcode: {}
      previouscoordinates: {}
      previouscountry: {}
      previoussignindatetime: {}
      previoussourceip: {}
      prismacloudcomputeactivitytype: {}
      prismacloudcomputeappid: {}
      prismacloudcomputecategory: {}
      prismacloudcomputecollections: {}
      prismacloudcomputecommand: {}
      prismacloudcomputecontainer: {}
      prismacloudcomputecredentialid: {}
      prismacloudcomputedistribution: {}
      prismacloudcomputeerror: {}
      prismacloudcomputeforensic: {}
      prismacloudcomputefqdn: {}
      prismacloudcomputefunction: {}
      prismacloudcomputehost: {}
      prismacloudcomputeimage: {}
      prismacloudcomputeinteractive: {}
      prismacloudcomputekubernetesresource: {}
      prismacloudcomputelabels: {}
      prismacloudcomputeline: {}
      prismacloudcomputelogfile: {}
      prismacloudcomputemarkdown: {}
      prismacloudcomputemessage: {}
      prismacloudcomputeproject: {}
      prismacloudcomputeprotected: {}
      prismacloudcomputeprovider: {}
      prismacloudcomputerawalertjson: {}
      prismacloudcomputeregion: {}
      prismacloudcomputeregistry: {}
      prismacloudcomputerule: {}
      prismacloudcomputeruntime: {}
      prismacloudcomputeservice: {}
      prismacloudcomputeservicetype: {}
      prismacloudcomputetotal: {}
      prismacloudcomputetype: {}
      prismacloudcomputeuser: {}
      prismacloudid: {}
      prismacloudreason: {}
      prismacloudrules: {}
      prismacloudstatus: {}
      prismacloudtime: {}
      privateip: {}
      publicip: {}
      rating: {}
      rawparticipants: {}
      region: {}
      regionid: {}
      replacePlaybook: {}
      reporteremailaddress: {}
      resourceapiname: {}
      resourcecloudtype: {}
      resourceid: {}
      resourcename: {}
      resourcetype: {}
      riskrating: {}
      riskscore: {}
      roles: {}
      rrn: {}
      s3html: {}
      s3url:
        simple: 'https://${incident.bucketname}.s3.${incident.regionid}.amazonaws.com '
      safebreachsimulationid: {}
      samaccountname: {}
      sansstage: {}
      sectorofaffectedparty: {}
      securitygroup: {}
      securitygroupid: {}
      severity: {}
      signature: {}
      signindatetime: {}
      sixgillalertid: {}
      sixgillcontent: {}
      sixgillthreatlevel: {}
      sixgillthreattype: {}
      sizenumberofemployees: {}
      sizeturnover: {}
      skuname: {}
      skutier: {}
      sla: {}
      slaField: {}
      sourcehostname: {}
      sourceip: {}
      src: {}
      srchostname: {}
      srcntdomain: {}
      srcos: {}
      srcuser: {}
      subscriptionassignedby: {}
      subscriptioncreatedby: {}
      subscriptioncreatedon: {}
      subscriptiondescription: {}
      subscriptionid: {}
      subscriptionname: {}
      subscriptiontype: {}
      subscriptionupdatedby: {}
      subscriptionupdatedon: {}
      subtype: {}
      successfullogin: {}
      systemdefault: {}
      systems: {}
      targetfirewallversion: {}
      telephoneno: {}
      terminatedaction: {}
      threatactor: {}
      trapsid: {}
      travelmaplink: {}
      triggeredsecurityprofile: {}
      type: {}
      url: {}
      urlsslverification: {}
      user: {}
      useraccountcontrol: {}
      userdisabledstatus: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vpc: {}
      vpcid: {}
      vpcsubnet: {}
      vulnerabilitycategory: {}
      whereisdatahosted: {}
      xdralertcount: {}
      xdralerts: {}
      xdrassigneduseremail: {}
      xdrassigneduserprettyname: {}
      xdrdescription: {}
      xdrdetectiontime: {}
      xdrfileartifacts: {}
      xdrhighseverityalertcount: {}
      xdrhostcount: {}
      xdrincidentid: {}
      xdrlowseverityalertcount: {}
      xdrmediumseverityalertcount: {}
      xdrnetworkartifacts: {}
      xdrnotes: {}
      xdrresolvecomment: {}
      xdrstatus: {}
      xdrurl: {}
      xdrusercount: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: Change the properties of an incident
      id: afafc238-7013-46c2-84c3-320e6cb450b3
      iscommand: true
      name: setIncident-with-S3-full-FQDN
      script: Builtin|||setIncident
      type: regular
      version: -1
    taskid: afafc238-7013-46c2-84c3-320e6cb450b3
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -880,
          "y": 420
        }
      }
  "26":
    id: "26"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "24"
    note: false
    quietmode: 0
    scriptarguments:
      assignBy:
        simple: random
      email: {}
      roles: {}
      username: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: |-
        Assign analyst to incident.
        By default,  the analyst is picked randomly from the available users, according to the provided roles (if no roles provided, will fetch all users).
        Otherwise, the analyst will be picked according to the 'assignBy' arguments.
        machine-learning: DBot will calculated and decide who is the best analyst for the job.
        top-user: The user that is most commonly owns this type of incident
        less-busy-user: The less busy analyst will be picked to be the incident owner.
        online: The analyst is picked randomly from all online analysts, according to the provided roles (if no roles provided, will fetch all users).
        current: The user that executed the command
      id: fe5fd793-f289-460e-8823-9e9b6b30866f
      iscommand: false
      name: AssignAnalystToIncident
      script: AssignAnalystToIncident
      type: regular
      version: -1
    taskid: fe5fd793-f289-460e-8823-9e9b6b30866f
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -880,
          "y": 280
        }
      }
  "27":
    id: "27"
    ignoreworker: false
    nexttasks:
      closeCase:
      - "29"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    sla:
      days: 3
      hours: 0
      weeks: 0
    task:
      brand: ""
      description: Manually review and investigate this incident.
      id: f0bde288-a76d-420d-8d34-278870a95fb9
      iscommand: false
      name: Manually review the incident.
      type: condition
      version: -1
    taskid: f0bde288-a76d-420d-8d34-278870a95fb9
    timertriggers:
    - action: start
      fieldname: remediationsla
    type: condition
    view: |-
      {
        "position": {
          "x": -930,
          "y": 1650
        }
      }
  "28":
    continueonerror: true
    id: "28"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "23"
    note: false
    quietmode: 0
    scriptarguments:
      alert-id:
        simple: ${incident.prismacloudid}
    separatecontext: false
    skipunavailable: false
    task:
      brand: RedLock_erik
      id: 0b0b5af4-7295-493c-8316-f2418c12e372
      iscommand: true
      name: redlock-get-remediation-details
      script: RedLock_erik|||redlock-get-remediation-details
      type: regular
      version: -1
    taskid: 0b0b5af4-7295-493c-8316-f2418c12e372
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -880,
          "y": 950
        }
      }
  "29":
    id: "29"
    ignoreworker: false
    note: false
    quietmode: 0
    scriptarguments:
      assetid: {}
      closeNotes: {}
      closeReason: {}
      code42alerttype: {}
      emailclassification: {}
      id: {}
      phishingsubtype: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: Close the current incident
      id: 2b3d2bd7-7a35-444a-8d87-61411cd84214
      iscommand: true
      name: closeInvestigation
      script: Builtin|||closeInvestigation
      type: regular
      version: -1
    taskid: 2b3d2bd7-7a35-444a-8d87-61411cd84214
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -930,
          "y": 1870
        }
      }
  "30":
    id: "30"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "35"
    note: false
    quietmode: 0
    scriptarguments:
      assignBy:
        simple: random
      email: {}
      onCall: {}
      roles: {}
      username: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: |-
        Assign analyst to incident.
        By default,  the analyst is picked randomly from the available users, according to the provided roles (if no roles provided, will fetch all users).
        Otherwise, the analyst will be picked according to the 'assignBy' arguments.
        machine-learning: DBot will calculated and decide who is the best analyst for the job.
        top-user: The user that is most commonly owns this type of incident
        less-busy-user: The less busy analyst will be picked to be the incident owner.
        online: The analyst is picked randomly from all online analysts, according to the provided roles (if no roles provided, will fetch all users).
        current: The user that executed the command
      id: 0c5fc22c-b9f5-48d8-8ec2-4f334a8f0505
      iscommand: false
      name: AssignAnalystToIncident
      script: AssignAnalystToIncident
      type: regular
      version: -1
    taskid: 0c5fc22c-b9f5-48d8-8ec2-4f334a8f0505
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -470,
          "y": 365
        }
      }
  "31":
    id: "31"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "36"
    note: false
    quietmode: 0
    scriptarguments:
      assignBy:
        simple: random
      email: {}
      onCall: {}
      roles: {}
      username: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: |-
        Assign analyst to incident.
        By default,  the analyst is picked randomly from the available users, according to the provided roles (if no roles provided, will fetch all users).
        Otherwise, the analyst will be picked according to the 'assignBy' arguments.
        machine-learning: DBot will calculated and decide who is the best analyst for the job.
        top-user: The user that is most commonly owns this type of incident
        less-busy-user: The less busy analyst will be picked to be the incident owner.
        online: The analyst is picked randomly from all online analysts, according to the provided roles (if no roles provided, will fetch all users).
        current: The user that executed the command
      id: bf563527-ab2a-427f-8283-48587c20384f
      iscommand: false
      name: AssignAnalystToIncident
      script: AssignAnalystToIncident
      type: regular
      version: -1
    taskid: bf563527-ab2a-427f-8283-48587c20384f
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -90,
          "y": 460
        }
      }
  "32":
    id: "32"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "41"
    note: false
    quietmode: 0
    scriptarguments:
      assignBy:
        simple: random
      email: {}
      onCall: {}
      roles: {}
      username: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: |-
        Assign analyst to incident.
        By default,  the analyst is picked randomly from the available users, according to the provided roles (if no roles provided, will fetch all users).
        Otherwise, the analyst will be picked according to the 'assignBy' arguments.
        machine-learning: DBot will calculated and decide who is the best analyst for the job.
        top-user: The user that is most commonly owns this type of incident
        less-busy-user: The less busy analyst will be picked to be the incident owner.
        online: The analyst is picked randomly from all online analysts, according to the provided roles (if no roles provided, will fetch all users).
        current: The user that executed the command
      id: 186a2526-e14d-4998-881c-574143aa80a1
      iscommand: false
      name: AssignAnalystToIncident
      script: AssignAnalystToIncident
      type: regular
      version: -1
    taskid: 186a2526-e14d-4998-881c-574143aa80a1
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 2160,
          "y": 270
        }
      }
  "33":
    id: "33"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "40"
    note: false
    quietmode: 0
    scriptarguments:
      assignBy:
        simple: random
      email: {}
      onCall: {}
      roles: {}
      username: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: |-
        Assign analyst to incident.
        By default,  the analyst is picked randomly from the available users, according to the provided roles (if no roles provided, will fetch all users).
        Otherwise, the analyst will be picked according to the 'assignBy' arguments.
        machine-learning: DBot will calculated and decide who is the best analyst for the job.
        top-user: The user that is most commonly owns this type of incident
        less-busy-user: The less busy analyst will be picked to be the incident owner.
        online: The analyst is picked randomly from all online analysts, according to the provided roles (if no roles provided, will fetch all users).
        current: The user that executed the command
      id: 56fb222e-a453-40f8-83ba-cf13d60705a8
      iscommand: false
      name: AssignAnalystToIncident
      script: AssignAnalystToIncident
      type: regular
      version: -1
    taskid: 56fb222e-a453-40f8-83ba-cf13d60705a8
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1760,
          "y": 350
        }
      }
  "34":
    id: "34"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "39"
    note: false
    quietmode: 0
    scriptarguments:
      assignBy:
        simple: random
      email: {}
      onCall: {}
      roles: {}
      username: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: |-
        Assign analyst to incident.
        By default,  the analyst is picked randomly from the available users, according to the provided roles (if no roles provided, will fetch all users).
        Otherwise, the analyst will be picked according to the 'assignBy' arguments.
        machine-learning: DBot will calculated and decide who is the best analyst for the job.
        top-user: The user that is most commonly owns this type of incident
        less-busy-user: The less busy analyst will be picked to be the incident owner.
        online: The analyst is picked randomly from all online analysts, according to the provided roles (if no roles provided, will fetch all users).
        current: The user that executed the command
      id: e0a72593-59e1-48c4-8d0a-07f75a111216
      iscommand: false
      name: AssignAnalystToIncident
      script: AssignAnalystToIncident
      type: regular
      version: -1
    taskid: e0a72593-59e1-48c4-8d0a-07f75a111216
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1340,
          "y": 480
        }
      }
  "35":
    id: "35"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "37"
    note: false
    quietmode: 0
    scriptarguments:
      accountgroups: {}
      accountid: {}
      accountname: {}
      activedirectoryaccountstatus: {}
      activedirectorydisplayname: {}
      activedirectorypasswordstatus: {}
      addLabels: {}
      affecteddata: {}
      affecteddatatype: {}
      affectedindividualscontactinformation: {}
      agentid: {}
      app: {}
      approximatenumberofaffecteddatasubjects: {}
      arn: {}
      assetid: {}
      attachmentcount: {}
      attachmentextension: {}
      attachmenthash: {}
      attachmentid: {}
      attachmentname: {}
      attachmentsize: {}
      attachmenttype: {}
      az: {}
      blockedaction: {}
      bucketname: {}
      bugtraq: {}
      cidrblock: {}
      city: {}
      clarotyalertresolved: {}
      clarotyalerttype: {}
      clarotycategory: {}
      clarotynetworkid: {}
      clarotyrelatedassets: {}
      clarotyresourceid: {}
      clarotysiteid: {}
      closeNotes: {}
      closeReason: {}
      code42alerttype: {}
      code42fileevents: {}
      commandline: {}
      companyaddress: {}
      companycity: {}
      companycountry: {}
      companyhasinsuranceforthebreach: {}
      companyname: {}
      companypostalcode: {}
      companypropertystatus: {}
      contactaddress: {}
      contactname: {}
      coordinates: {}
      country: {}
      countrywherebusinesshasitsmainestablishment: {}
      countrywherethebreachtookplace: {}
      criticalassets: {}
      customFields: {}
      cve: {}
      cvss: {}
      cymulateimmediatethreatsattackid: {}
      cymulateimmediatethreatsfiletype: {}
      cymulateimmediatethreatsid: {}
      cymulateimmediatethreatsmitigations: {}
      cymulateimmediatethreatsmodule: {}
      cymulateimmediatethreatspayloadname: {}
      cymulateimmediatethreatsstatus: {}
      cymulateimmediatethreatsvector: {}
      dataencryptionstatus: {}
      datetimeofthebreach: {}
      dbotprediction: {}
      dbotpredictionprobability: {}
      dbottextsuggestionhighlighted: {}
      deleteEmptyField: {}
      dest: {}
      desthostname: {}
      destinationip: {}
      destntdomain: {}
      destos: {}
      details: {}
      detectionendtime: {}
      detectionid: {}
      detectionticketed: {}
      detectionupdatetime: {}
      detectionurl: {}
      devicegsuiteaccountstatus: {}
      devicename: {}
      dpoemailaddress: {}
      duoaccountstatus: {}
      duration: {}
      emailaddress: {}
      emailauthenticitycheck: {}
      emailautoreply: {}
      emailbcc: {}
      emailbody: {}
      emailbodyformat: {}
      emailbodyhtml: {}
      emailcc: {}
      emailclassification: {}
      emailclientname: {}
      emailfrom: {}
      emailheaders: {}
      emailhtml: {}
      emailinreplyto: {}
      emailkeywords: {}
      emailmessageid: {}
      emailreceived: {}
      emailreplyto: {}
      emailreturnpath: {}
      emailsenderip: {}
      emailsize: {}
      emailsource: {}
      emailsubject: {}
      emailto: {}
      emailtocount: {}
      emailurlclicked: {}
      employeedisplayname: {}
      employeeemail: {}
      employeemanageremail: {}
      exfiltratedfiles: {}
      expanseexposuretype: {}
      expanserawjsonevent: {}
      expanseseverity: {}
      extrahopapplianceid: {}
      extrahophostname: {}
      filehash: {}
      filename: {}
      filepath: {}
      filesize: {}
      firstseen: {}
      globaldirectoryvisibility: {}
      googleaccountstatus: {}
      googleadminrolesstatus: {}
      googledisplayname: {}
      googledrivestatus: {}
      googlemailstatus: {}
      googlepasswordstatus: {}
      helloworldid: {}
      helloworldstatus: {}
      helloworldtype: {}
      hostname: {}
      id: {}
      indenideviceid: {}
      indeniissueid: {}
      infectedhosts: {}
      investigationstage: {}
      isolated: {}
      isthedatasubjecttodpia: {}
      labels: {}
      lastmodifiedby: {}
      lastmodifiedon: {}
      lastseen: {}
      likelyimpact: {}
      loginattemptcount: {}
      macaddress: {}
      mailboxdelegation: {}
      maliciousbehavior: {}
      maliciouscauseifthecauseisamaliciousattack: {}
      malwarefamily: {}
      measurestomitigate: {}
      name: {}
      niststage: {}
      occurred: {}
      offboardingdate: {}
      offboardingstage: {}
      oktaaccountstatus: {}
      owner: {}
      parentprocessid: {}
      participants: {}
      passwordexpirationstatus: {}
      phase: {}
      phishingsubtype: {}
      pid: {}
      policydeleted: {}
      policydescription: {}
      policydetails: {}
      policyid: {}
      policyname: {}
      policyrecommendation: {}
      policyremediable: {}
      policyseverity: {}
      policytype: {}
      possiblecauseofthebreach: {}
      postalcode: {}
      previouscoordinates: {}
      previouscountry: {}
      previoussignindatetime: {}
      previoussourceip: {}
      prismacloudcomputeactivitytype: {}
      prismacloudcomputeappid: {}
      prismacloudcomputecategory: {}
      prismacloudcomputecollections: {}
      prismacloudcomputecommand: {}
      prismacloudcomputecontainer: {}
      prismacloudcomputecredentialid: {}
      prismacloudcomputedistribution: {}
      prismacloudcomputeerror: {}
      prismacloudcomputeforensic: {}
      prismacloudcomputefqdn: {}
      prismacloudcomputefunction: {}
      prismacloudcomputehost: {}
      prismacloudcomputeimage: {}
      prismacloudcomputeinteractive: {}
      prismacloudcomputekubernetesresource: {}
      prismacloudcomputelabels: {}
      prismacloudcomputeline: {}
      prismacloudcomputelogfile: {}
      prismacloudcomputemarkdown: {}
      prismacloudcomputemessage: {}
      prismacloudcomputeproject: {}
      prismacloudcomputeprotected: {}
      prismacloudcomputeprovider: {}
      prismacloudcomputerawalertjson: {}
      prismacloudcomputeregion: {}
      prismacloudcomputeregistry: {}
      prismacloudcomputerule: {}
      prismacloudcomputeruntime: {}
      prismacloudcomputeservice: {}
      prismacloudcomputeservicetype: {}
      prismacloudcomputetotal: {}
      prismacloudcomputetype: {}
      prismacloudcomputeuser: {}
      prismacloudid: {}
      prismacloudreason: {}
      prismacloudrules: {}
      prismacloudstatus: {}
      prismacloudtime: {}
      privateip: {}
      publicip: {}
      rating: {}
      rawparticipants: {}
      region: {}
      regionid: {}
      replacePlaybook: {}
      reporteremailaddress: {}
      resourceapiname: {}
      resourcecloudtype: {}
      resourceid: {}
      resourcename: {}
      resourcetype: {}
      riskrating: {}
      riskscore: {}
      roles: {}
      rrn: {}
      s3html: {}
      s3url:
        simple: 'https://${incident.bucketname}.s3.${incident.regionid}.amazonaws.com '
      safebreachsimulationid: {}
      samaccountname: {}
      sansstage: {}
      sectorofaffectedparty: {}
      securitygroup: {}
      securitygroupid: {}
      severity: {}
      signature: {}
      signindatetime: {}
      sixgillalertid: {}
      sixgillcontent: {}
      sixgillthreatlevel: {}
      sixgillthreattype: {}
      sizenumberofemployees: {}
      sizeturnover: {}
      skuname: {}
      skutier: {}
      sla: {}
      slaField: {}
      sourcehostname: {}
      sourceip: {}
      src: {}
      srchostname: {}
      srcntdomain: {}
      srcos: {}
      srcuser: {}
      subscriptionassignedby: {}
      subscriptioncreatedby: {}
      subscriptioncreatedon: {}
      subscriptiondescription: {}
      subscriptionid: {}
      subscriptionname: {}
      subscriptiontype: {}
      subscriptionupdatedby: {}
      subscriptionupdatedon: {}
      subtype: {}
      successfullogin: {}
      systemdefault: {}
      systems: {}
      targetfirewallversion: {}
      telephoneno: {}
      terminatedaction: {}
      threatactor: {}
      trapsid: {}
      travelmaplink: {}
      triggeredsecurityprofile: {}
      type: {}
      url: {}
      urlsslverification: {}
      user: {}
      useraccountcontrol: {}
      userdisabledstatus: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vpc: {}
      vpcid: {}
      vpcsubnet: {}
      vulnerabilitycategory: {}
      whereisdatahosted: {}
      xdralertcount: {}
      xdralerts: {}
      xdrassigneduseremail: {}
      xdrassigneduserprettyname: {}
      xdrdescription: {}
      xdrdetectiontime: {}
      xdrfileartifacts: {}
      xdrhighseverityalertcount: {}
      xdrhostcount: {}
      xdrincidentid: {}
      xdrlowseverityalertcount: {}
      xdrmediumseverityalertcount: {}
      xdrnetworkartifacts: {}
      xdrnotes: {}
      xdrresolvecomment: {}
      xdrstatus: {}
      xdrurl: {}
      xdrusercount: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: Change the properties of an incident
      id: 74b3d8d1-3577-45eb-8722-9432db5153cd
      iscommand: true
      name: setIncident-with-S3-full-FQDN
      script: Builtin|||setIncident
      type: regular
      version: -1
    taskid: 74b3d8d1-3577-45eb-8722-9432db5153cd
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -470,
          "y": 555
        }
      }
  "36":
    id: "36"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "38"
    note: false
    quietmode: 0
    scriptarguments:
      accountgroups: {}
      accountid: {}
      accountname: {}
      activedirectoryaccountstatus: {}
      activedirectorydisplayname: {}
      activedirectorypasswordstatus: {}
      addLabels: {}
      affecteddata: {}
      affecteddatatype: {}
      affectedindividualscontactinformation: {}
      agentid: {}
      app: {}
      approximatenumberofaffecteddatasubjects: {}
      arn: {}
      assetid: {}
      attachmentcount: {}
      attachmentextension: {}
      attachmenthash: {}
      attachmentid: {}
      attachmentname: {}
      attachmentsize: {}
      attachmenttype: {}
      az: {}
      blockedaction: {}
      bucketname: {}
      bugtraq: {}
      cidrblock: {}
      city: {}
      clarotyalertresolved: {}
      clarotyalerttype: {}
      clarotycategory: {}
      clarotynetworkid: {}
      clarotyrelatedassets: {}
      clarotyresourceid: {}
      clarotysiteid: {}
      closeNotes: {}
      closeReason: {}
      code42alerttype: {}
      code42fileevents: {}
      commandline: {}
      companyaddress: {}
      companycity: {}
      companycountry: {}
      companyhasinsuranceforthebreach: {}
      companyname: {}
      companypostalcode: {}
      companypropertystatus: {}
      contactaddress: {}
      contactname: {}
      coordinates: {}
      country: {}
      countrywherebusinesshasitsmainestablishment: {}
      countrywherethebreachtookplace: {}
      criticalassets: {}
      customFields: {}
      cve: {}
      cvss: {}
      cymulateimmediatethreatsattackid: {}
      cymulateimmediatethreatsfiletype: {}
      cymulateimmediatethreatsid: {}
      cymulateimmediatethreatsmitigations: {}
      cymulateimmediatethreatsmodule: {}
      cymulateimmediatethreatspayloadname: {}
      cymulateimmediatethreatsstatus: {}
      cymulateimmediatethreatsvector: {}
      dataencryptionstatus: {}
      datetimeofthebreach: {}
      dbotprediction: {}
      dbotpredictionprobability: {}
      dbottextsuggestionhighlighted: {}
      deleteEmptyField: {}
      dest: {}
      desthostname: {}
      destinationip: {}
      destntdomain: {}
      destos: {}
      details: {}
      detectionendtime: {}
      detectionid: {}
      detectionticketed: {}
      detectionupdatetime: {}
      detectionurl: {}
      devicegsuiteaccountstatus: {}
      devicename: {}
      dpoemailaddress: {}
      duoaccountstatus: {}
      duration: {}
      emailaddress: {}
      emailauthenticitycheck: {}
      emailautoreply: {}
      emailbcc: {}
      emailbody: {}
      emailbodyformat: {}
      emailbodyhtml: {}
      emailcc: {}
      emailclassification: {}
      emailclientname: {}
      emailfrom: {}
      emailheaders: {}
      emailhtml: {}
      emailinreplyto: {}
      emailkeywords: {}
      emailmessageid: {}
      emailreceived: {}
      emailreplyto: {}
      emailreturnpath: {}
      emailsenderip: {}
      emailsize: {}
      emailsource: {}
      emailsubject: {}
      emailto: {}
      emailtocount: {}
      emailurlclicked: {}
      employeedisplayname: {}
      employeeemail: {}
      employeemanageremail: {}
      exfiltratedfiles: {}
      expanseexposuretype: {}
      expanserawjsonevent: {}
      expanseseverity: {}
      extrahopapplianceid: {}
      extrahophostname: {}
      filehash: {}
      filename: {}
      filepath: {}
      filesize: {}
      firstseen: {}
      globaldirectoryvisibility: {}
      googleaccountstatus: {}
      googleadminrolesstatus: {}
      googledisplayname: {}
      googledrivestatus: {}
      googlemailstatus: {}
      googlepasswordstatus: {}
      helloworldid: {}
      helloworldstatus: {}
      helloworldtype: {}
      hostname: {}
      id: {}
      indenideviceid: {}
      indeniissueid: {}
      infectedhosts: {}
      investigationstage: {}
      isolated: {}
      isthedatasubjecttodpia: {}
      labels: {}
      lastmodifiedby: {}
      lastmodifiedon: {}
      lastseen: {}
      likelyimpact: {}
      loginattemptcount: {}
      macaddress: {}
      mailboxdelegation: {}
      maliciousbehavior: {}
      maliciouscauseifthecauseisamaliciousattack: {}
      malwarefamily: {}
      measurestomitigate: {}
      name: {}
      niststage: {}
      occurred: {}
      offboardingdate: {}
      offboardingstage: {}
      oktaaccountstatus: {}
      owner: {}
      parentprocessid: {}
      participants: {}
      passwordexpirationstatus: {}
      phase: {}
      phishingsubtype: {}
      pid: {}
      policydeleted: {}
      policydescription: {}
      policydetails: {}
      policyid: {}
      policyname: {}
      policyrecommendation: {}
      policyremediable: {}
      policyseverity: {}
      policytype: {}
      possiblecauseofthebreach: {}
      postalcode: {}
      previouscoordinates: {}
      previouscountry: {}
      previoussignindatetime: {}
      previoussourceip: {}
      prismacloudcomputeactivitytype: {}
      prismacloudcomputeappid: {}
      prismacloudcomputecategory: {}
      prismacloudcomputecollections: {}
      prismacloudcomputecommand: {}
      prismacloudcomputecontainer: {}
      prismacloudcomputecredentialid: {}
      prismacloudcomputedistribution: {}
      prismacloudcomputeerror: {}
      prismacloudcomputeforensic: {}
      prismacloudcomputefqdn: {}
      prismacloudcomputefunction: {}
      prismacloudcomputehost: {}
      prismacloudcomputeimage: {}
      prismacloudcomputeinteractive: {}
      prismacloudcomputekubernetesresource: {}
      prismacloudcomputelabels: {}
      prismacloudcomputeline: {}
      prismacloudcomputelogfile: {}
      prismacloudcomputemarkdown: {}
      prismacloudcomputemessage: {}
      prismacloudcomputeproject: {}
      prismacloudcomputeprotected: {}
      prismacloudcomputeprovider: {}
      prismacloudcomputerawalertjson: {}
      prismacloudcomputeregion: {}
      prismacloudcomputeregistry: {}
      prismacloudcomputerule: {}
      prismacloudcomputeruntime: {}
      prismacloudcomputeservice: {}
      prismacloudcomputeservicetype: {}
      prismacloudcomputetotal: {}
      prismacloudcomputetype: {}
      prismacloudcomputeuser: {}
      prismacloudid: {}
      prismacloudreason: {}
      prismacloudrules: {}
      prismacloudstatus: {}
      prismacloudtime: {}
      privateip: {}
      publicip: {}
      rating: {}
      rawparticipants: {}
      region: {}
      regionid: {}
      replacePlaybook: {}
      reporteremailaddress: {}
      resourceapiname: {}
      resourcecloudtype: {}
      resourceid: {}
      resourcename: {}
      resourcetype: {}
      riskrating: {}
      riskscore: {}
      roles: {}
      rrn: {}
      s3html: {}
      s3url:
        simple: 'https://${incident.bucketname}.s3.${incident.regionid}.amazonaws.com '
      safebreachsimulationid: {}
      samaccountname: {}
      sansstage: {}
      sectorofaffectedparty: {}
      securitygroup: {}
      securitygroupid: {}
      severity: {}
      signature: {}
      signindatetime: {}
      sixgillalertid: {}
      sixgillcontent: {}
      sixgillthreatlevel: {}
      sixgillthreattype: {}
      sizenumberofemployees: {}
      sizeturnover: {}
      skuname: {}
      skutier: {}
      sla: {}
      slaField: {}
      sourcehostname: {}
      sourceip: {}
      src: {}
      srchostname: {}
      srcntdomain: {}
      srcos: {}
      srcuser: {}
      subscriptionassignedby: {}
      subscriptioncreatedby: {}
      subscriptioncreatedon: {}
      subscriptiondescription: {}
      subscriptionid: {}
      subscriptionname: {}
      subscriptiontype: {}
      subscriptionupdatedby: {}
      subscriptionupdatedon: {}
      subtype: {}
      successfullogin: {}
      systemdefault: {}
      systems: {}
      targetfirewallversion: {}
      telephoneno: {}
      terminatedaction: {}
      threatactor: {}
      trapsid: {}
      travelmaplink: {}
      triggeredsecurityprofile: {}
      type: {}
      url: {}
      urlsslverification: {}
      user: {}
      useraccountcontrol: {}
      userdisabledstatus: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vpc: {}
      vpcid: {}
      vpcsubnet: {}
      vulnerabilitycategory: {}
      whereisdatahosted: {}
      xdralertcount: {}
      xdralerts: {}
      xdrassigneduseremail: {}
      xdrassigneduserprettyname: {}
      xdrdescription: {}
      xdrdetectiontime: {}
      xdrfileartifacts: {}
      xdrhighseverityalertcount: {}
      xdrhostcount: {}
      xdrincidentid: {}
      xdrlowseverityalertcount: {}
      xdrmediumseverityalertcount: {}
      xdrnetworkartifacts: {}
      xdrnotes: {}
      xdrresolvecomment: {}
      xdrstatus: {}
      xdrurl: {}
      xdrusercount: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: Change the properties of an incident
      id: f26baa73-7794-45f4-84b4-9991563b9cb5
      iscommand: true
      name: setIncident-with-S3-full-FQDN
      script: Builtin|||setIncident
      type: regular
      version: -1
    taskid: f26baa73-7794-45f4-84b4-9991563b9cb5
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -90,
          "y": 650
        }
      }
  "37":
    id: "37"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "42"
    note: false
    quietmode: 0
    scriptarguments:
      attributes: {}
      custom-field-data: {}
      custom-field-type: {}
      dn: {}
      email: {}
      limit: {}
      name:
        simple: ${incident.accountname}
      user-account-control-out: {}
      username: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Active Directory Query v2
      description: Retrieves detailed information about a user account. The user can
        be specified by name, email address, or as an Active Directory Distinguished
        Name (DN). If no filter is specified, all users are returned.
      id: 04660b69-2e21-4f66-8ea8-64483e8731f1
      iscommand: true
      name: ad-get-user-AWS-account-name
      script: Active Directory Query v2|||ad-get-user
      type: regular
      version: -1
    taskid: 04660b69-2e21-4f66-8ea8-64483e8731f1
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -470,
          "y": 760
        }
      }
  "38":
    id: "38"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "43"
    note: false
    quietmode: 0
    scriptarguments:
      attributes: {}
      custom-field-data: {}
      custom-field-type: {}
      dn: {}
      email: {}
      limit: {}
      name:
        simple: ${incident.accountname}
      user-account-control-out: {}
      username: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Active Directory Query v2
      description: Retrieves detailed information about a user account. The user can
        be specified by name, email address, or as an Active Directory Distinguished
        Name (DN). If no filter is specified, all users are returned.
      id: 9970910b-2012-4aac-88c6-2432f90f4de3
      iscommand: true
      name: ad-get-user-AWS-account-name
      script: Active Directory Query v2|||ad-get-user
      type: regular
      version: -1
    taskid: 9970910b-2012-4aac-88c6-2432f90f4de3
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -90,
          "y": 855
        }
      }
  "39":
    id: "39"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "60"
    note: false
    quietmode: 0
    scriptarguments:
      accountgroups: {}
      accountid: {}
      accountname: {}
      activedirectoryaccountstatus: {}
      activedirectorydisplayname: {}
      activedirectorypasswordstatus: {}
      addLabels: {}
      affecteddata: {}
      affecteddatatype: {}
      affectedindividualscontactinformation: {}
      agentid: {}
      app: {}
      approximatenumberofaffecteddatasubjects: {}
      arn: {}
      assetid: {}
      attachmentcount: {}
      attachmentextension: {}
      attachmenthash: {}
      attachmentid: {}
      attachmentname: {}
      attachmentsize: {}
      attachmenttype: {}
      az: {}
      blockedaction: {}
      bucketname: {}
      bugtraq: {}
      cidrblock: {}
      city: {}
      clarotyalertresolved: {}
      clarotyalerttype: {}
      clarotycategory: {}
      clarotynetworkid: {}
      clarotyrelatedassets: {}
      clarotyresourceid: {}
      clarotysiteid: {}
      closeNotes: {}
      closeReason: {}
      code42alerttype: {}
      code42fileevents: {}
      commandline: {}
      companyaddress: {}
      companycity: {}
      companycountry: {}
      companyhasinsuranceforthebreach: {}
      companyname: {}
      companypostalcode: {}
      companypropertystatus: {}
      contactaddress: {}
      contactname: {}
      coordinates: {}
      country: {}
      countrywherebusinesshasitsmainestablishment: {}
      countrywherethebreachtookplace: {}
      criticalassets: {}
      customFields: {}
      cve: {}
      cvss: {}
      cymulateimmediatethreatsattackid: {}
      cymulateimmediatethreatsfiletype: {}
      cymulateimmediatethreatsid: {}
      cymulateimmediatethreatsmitigations: {}
      cymulateimmediatethreatsmodule: {}
      cymulateimmediatethreatspayloadname: {}
      cymulateimmediatethreatsstatus: {}
      cymulateimmediatethreatsvector: {}
      dataencryptionstatus: {}
      datetimeofthebreach: {}
      dbotprediction: {}
      dbotpredictionprobability: {}
      dbottextsuggestionhighlighted: {}
      deleteEmptyField: {}
      dest: {}
      desthostname: {}
      destinationip: {}
      destntdomain: {}
      destos: {}
      details: {}
      detectionendtime: {}
      detectionid: {}
      detectionticketed: {}
      detectionupdatetime: {}
      detectionurl: {}
      devicegsuiteaccountstatus: {}
      devicename: {}
      dpoemailaddress: {}
      duoaccountstatus: {}
      duration: {}
      emailaddress: {}
      emailauthenticitycheck: {}
      emailautoreply: {}
      emailbcc: {}
      emailbody: {}
      emailbodyformat: {}
      emailbodyhtml: {}
      emailcc: {}
      emailclassification: {}
      emailclientname: {}
      emailfrom: {}
      emailheaders: {}
      emailhtml: {}
      emailinreplyto: {}
      emailkeywords: {}
      emailmessageid: {}
      emailreceived: {}
      emailreplyto: {}
      emailreturnpath: {}
      emailsenderip: {}
      emailsize: {}
      emailsource: {}
      emailsubject: {}
      emailto: {}
      emailtocount: {}
      emailurlclicked: {}
      employeedisplayname: {}
      employeeemail: {}
      employeemanageremail: {}
      exfiltratedfiles: {}
      expanseexposuretype: {}
      expanserawjsonevent: {}
      expanseseverity: {}
      extrahopapplianceid: {}
      extrahophostname: {}
      filehash: {}
      filename: {}
      filepath: {}
      filesize: {}
      firstseen: {}
      globaldirectoryvisibility: {}
      googleaccountstatus: {}
      googleadminrolesstatus: {}
      googledisplayname: {}
      googledrivestatus: {}
      googlemailstatus: {}
      googlepasswordstatus: {}
      helloworldid: {}
      helloworldstatus: {}
      helloworldtype: {}
      hostname: {}
      id: {}
      indenideviceid: {}
      indeniissueid: {}
      infectedhosts: {}
      investigationstage: {}
      isolated: {}
      isthedatasubjecttodpia: {}
      labels: {}
      lastmodifiedby: {}
      lastmodifiedon: {}
      lastseen: {}
      likelyimpact: {}
      loginattemptcount: {}
      macaddress: {}
      mailboxdelegation: {}
      maliciousbehavior: {}
      maliciouscauseifthecauseisamaliciousattack: {}
      malwarefamily: {}
      measurestomitigate: {}
      name: {}
      niststage: {}
      occurred: {}
      offboardingdate: {}
      offboardingstage: {}
      oktaaccountstatus: {}
      owner: {}
      parentprocessid: {}
      participants: {}
      passwordexpirationstatus: {}
      phase: {}
      phishingsubtype: {}
      pid: {}
      policydeleted: {}
      policydescription: {}
      policydetails: {}
      policyid: {}
      policyname: {}
      policyrecommendation: {}
      policyremediable: {}
      policyseverity: {}
      policytype: {}
      possiblecauseofthebreach: {}
      postalcode: {}
      previouscoordinates: {}
      previouscountry: {}
      previoussignindatetime: {}
      previoussourceip: {}
      prismacloudcomputeactivitytype: {}
      prismacloudcomputeappid: {}
      prismacloudcomputecategory: {}
      prismacloudcomputecollections: {}
      prismacloudcomputecommand: {}
      prismacloudcomputecontainer: {}
      prismacloudcomputecredentialid: {}
      prismacloudcomputedistribution: {}
      prismacloudcomputeerror: {}
      prismacloudcomputeforensic: {}
      prismacloudcomputefqdn: {}
      prismacloudcomputefunction: {}
      prismacloudcomputehost: {}
      prismacloudcomputeimage: {}
      prismacloudcomputeinteractive: {}
      prismacloudcomputekubernetesresource: {}
      prismacloudcomputelabels: {}
      prismacloudcomputeline: {}
      prismacloudcomputelogfile: {}
      prismacloudcomputemarkdown: {}
      prismacloudcomputemessage: {}
      prismacloudcomputeproject: {}
      prismacloudcomputeprotected: {}
      prismacloudcomputeprovider: {}
      prismacloudcomputerawalertjson: {}
      prismacloudcomputeregion: {}
      prismacloudcomputeregistry: {}
      prismacloudcomputerule: {}
      prismacloudcomputeruntime: {}
      prismacloudcomputeservice: {}
      prismacloudcomputeservicetype: {}
      prismacloudcomputetotal: {}
      prismacloudcomputetype: {}
      prismacloudcomputeuser: {}
      prismacloudid: {}
      prismacloudreason: {}
      prismacloudrules: {}
      prismacloudstatus: {}
      prismacloudtime: {}
      privateip: {}
      publicip: {}
      rating: {}
      rawparticipants: {}
      region: {}
      regionid: {}
      replacePlaybook: {}
      reporteremailaddress: {}
      resourceapiname: {}
      resourcecloudtype: {}
      resourceid: {}
      resourcename: {}
      resourcetype: {}
      riskrating: {}
      riskscore: {}
      roles: {}
      rrn: {}
      s3html: {}
      s3url:
        simple: 'https://${incident.bucketname}.s3.${incident.regionid}.amazonaws.com '
      safebreachsimulationid: {}
      samaccountname: {}
      sansstage: {}
      sectorofaffectedparty: {}
      securitygroup: {}
      securitygroupid: {}
      severity: {}
      signature: {}
      signindatetime: {}
      sixgillalertid: {}
      sixgillcontent: {}
      sixgillthreatlevel: {}
      sixgillthreattype: {}
      sizenumberofemployees: {}
      sizeturnover: {}
      skuname: {}
      skutier: {}
      sla: {}
      slaField: {}
      sourcehostname: {}
      sourceip: {}
      src: {}
      srchostname: {}
      srcntdomain: {}
      srcos: {}
      srcuser: {}
      subscriptionassignedby: {}
      subscriptioncreatedby: {}
      subscriptioncreatedon: {}
      subscriptiondescription: {}
      subscriptionid: {}
      subscriptionname: {}
      subscriptiontype: {}
      subscriptionupdatedby: {}
      subscriptionupdatedon: {}
      subtype: {}
      successfullogin: {}
      systemdefault: {}
      systems: {}
      targetfirewallversion: {}
      telephoneno: {}
      terminatedaction: {}
      threatactor: {}
      trapsid: {}
      travelmaplink: {}
      triggeredsecurityprofile: {}
      type: {}
      url: {}
      urlsslverification: {}
      user: {}
      useraccountcontrol: {}
      userdisabledstatus: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vpc: {}
      vpcid: {}
      vpcsubnet: {}
      vulnerabilitycategory: {}
      whereisdatahosted: {}
      xdralertcount: {}
      xdralerts: {}
      xdrassigneduseremail: {}
      xdrassigneduserprettyname: {}
      xdrdescription: {}
      xdrdetectiontime: {}
      xdrfileartifacts: {}
      xdrhighseverityalertcount: {}
      xdrhostcount: {}
      xdrincidentid: {}
      xdrlowseverityalertcount: {}
      xdrmediumseverityalertcount: {}
      xdrnetworkartifacts: {}
      xdrnotes: {}
      xdrresolvecomment: {}
      xdrstatus: {}
      xdrurl: {}
      xdrusercount: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: Change the properties of an incident
      id: 618ccbb0-17d7-4b2d-8dbf-13a7e90e6bc2
      iscommand: true
      name: setIncident-with-S3-full-FQDN
      script: Builtin|||setIncident
      type: regular
      version: -1
    taskid: 618ccbb0-17d7-4b2d-8dbf-13a7e90e6bc2
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1340,
          "y": 665
        }
      }
  "40":
    id: "40"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "56"
    note: false
    quietmode: 0
    scriptarguments:
      accountgroups: {}
      accountid: {}
      accountname: {}
      activedirectoryaccountstatus: {}
      activedirectorydisplayname: {}
      activedirectorypasswordstatus: {}
      addLabels: {}
      affecteddata: {}
      affecteddatatype: {}
      affectedindividualscontactinformation: {}
      agentid: {}
      app: {}
      approximatenumberofaffecteddatasubjects: {}
      arn: {}
      assetid: {}
      attachmentcount: {}
      attachmentextension: {}
      attachmenthash: {}
      attachmentid: {}
      attachmentname: {}
      attachmentsize: {}
      attachmenttype: {}
      az: {}
      blockedaction: {}
      bucketname: {}
      bugtraq: {}
      cidrblock: {}
      city: {}
      clarotyalertresolved: {}
      clarotyalerttype: {}
      clarotycategory: {}
      clarotynetworkid: {}
      clarotyrelatedassets: {}
      clarotyresourceid: {}
      clarotysiteid: {}
      closeNotes: {}
      closeReason: {}
      code42alerttype: {}
      code42fileevents: {}
      commandline: {}
      companyaddress: {}
      companycity: {}
      companycountry: {}
      companyhasinsuranceforthebreach: {}
      companyname: {}
      companypostalcode: {}
      companypropertystatus: {}
      contactaddress: {}
      contactname: {}
      coordinates: {}
      country: {}
      countrywherebusinesshasitsmainestablishment: {}
      countrywherethebreachtookplace: {}
      criticalassets: {}
      customFields: {}
      cve: {}
      cvss: {}
      cymulateimmediatethreatsattackid: {}
      cymulateimmediatethreatsfiletype: {}
      cymulateimmediatethreatsid: {}
      cymulateimmediatethreatsmitigations: {}
      cymulateimmediatethreatsmodule: {}
      cymulateimmediatethreatspayloadname: {}
      cymulateimmediatethreatsstatus: {}
      cymulateimmediatethreatsvector: {}
      dataencryptionstatus: {}
      datetimeofthebreach: {}
      dbotprediction: {}
      dbotpredictionprobability: {}
      dbottextsuggestionhighlighted: {}
      deleteEmptyField: {}
      dest: {}
      desthostname: {}
      destinationip: {}
      destntdomain: {}
      destos: {}
      details: {}
      detectionendtime: {}
      detectionid: {}
      detectionticketed: {}
      detectionupdatetime: {}
      detectionurl: {}
      devicegsuiteaccountstatus: {}
      devicename: {}
      dpoemailaddress: {}
      duoaccountstatus: {}
      duration: {}
      emailaddress: {}
      emailauthenticitycheck: {}
      emailautoreply: {}
      emailbcc: {}
      emailbody: {}
      emailbodyformat: {}
      emailbodyhtml: {}
      emailcc: {}
      emailclassification: {}
      emailclientname: {}
      emailfrom: {}
      emailheaders: {}
      emailhtml: {}
      emailinreplyto: {}
      emailkeywords: {}
      emailmessageid: {}
      emailreceived: {}
      emailreplyto: {}
      emailreturnpath: {}
      emailsenderip: {}
      emailsize: {}
      emailsource: {}
      emailsubject: {}
      emailto: {}
      emailtocount: {}
      emailurlclicked: {}
      employeedisplayname: {}
      employeeemail: {}
      employeemanageremail: {}
      exfiltratedfiles: {}
      expanseexposuretype: {}
      expanserawjsonevent: {}
      expanseseverity: {}
      extrahopapplianceid: {}
      extrahophostname: {}
      filehash: {}
      filename: {}
      filepath: {}
      filesize: {}
      firstseen: {}
      globaldirectoryvisibility: {}
      googleaccountstatus: {}
      googleadminrolesstatus: {}
      googledisplayname: {}
      googledrivestatus: {}
      googlemailstatus: {}
      googlepasswordstatus: {}
      helloworldid: {}
      helloworldstatus: {}
      helloworldtype: {}
      hostname: {}
      id: {}
      indenideviceid: {}
      indeniissueid: {}
      infectedhosts: {}
      investigationstage: {}
      isolated: {}
      isthedatasubjecttodpia: {}
      labels: {}
      lastmodifiedby: {}
      lastmodifiedon: {}
      lastseen: {}
      likelyimpact: {}
      loginattemptcount: {}
      macaddress: {}
      mailboxdelegation: {}
      maliciousbehavior: {}
      maliciouscauseifthecauseisamaliciousattack: {}
      malwarefamily: {}
      measurestomitigate: {}
      name: {}
      niststage: {}
      occurred: {}
      offboardingdate: {}
      offboardingstage: {}
      oktaaccountstatus: {}
      owner: {}
      parentprocessid: {}
      participants: {}
      passwordexpirationstatus: {}
      phase: {}
      phishingsubtype: {}
      pid: {}
      policydeleted: {}
      policydescription: {}
      policydetails: {}
      policyid: {}
      policyname: {}
      policyrecommendation: {}
      policyremediable: {}
      policyseverity: {}
      policytype: {}
      possiblecauseofthebreach: {}
      postalcode: {}
      previouscoordinates: {}
      previouscountry: {}
      previoussignindatetime: {}
      previoussourceip: {}
      prismacloudcomputeactivitytype: {}
      prismacloudcomputeappid: {}
      prismacloudcomputecategory: {}
      prismacloudcomputecollections: {}
      prismacloudcomputecommand: {}
      prismacloudcomputecontainer: {}
      prismacloudcomputecredentialid: {}
      prismacloudcomputedistribution: {}
      prismacloudcomputeerror: {}
      prismacloudcomputeforensic: {}
      prismacloudcomputefqdn: {}
      prismacloudcomputefunction: {}
      prismacloudcomputehost: {}
      prismacloudcomputeimage: {}
      prismacloudcomputeinteractive: {}
      prismacloudcomputekubernetesresource: {}
      prismacloudcomputelabels: {}
      prismacloudcomputeline: {}
      prismacloudcomputelogfile: {}
      prismacloudcomputemarkdown: {}
      prismacloudcomputemessage: {}
      prismacloudcomputeproject: {}
      prismacloudcomputeprotected: {}
      prismacloudcomputeprovider: {}
      prismacloudcomputerawalertjson: {}
      prismacloudcomputeregion: {}
      prismacloudcomputeregistry: {}
      prismacloudcomputerule: {}
      prismacloudcomputeruntime: {}
      prismacloudcomputeservice: {}
      prismacloudcomputeservicetype: {}
      prismacloudcomputetotal: {}
      prismacloudcomputetype: {}
      prismacloudcomputeuser: {}
      prismacloudid: {}
      prismacloudreason: {}
      prismacloudrules: {}
      prismacloudstatus: {}
      prismacloudtime: {}
      privateip: {}
      publicip: {}
      rating: {}
      rawparticipants: {}
      region: {}
      regionid: {}
      replacePlaybook: {}
      reporteremailaddress: {}
      resourceapiname: {}
      resourcecloudtype: {}
      resourceid: {}
      resourcename: {}
      resourcetype: {}
      riskrating: {}
      riskscore: {}
      roles: {}
      rrn: {}
      s3html: {}
      s3url:
        simple: 'https://${incident.bucketname}.s3.${incident.regionid}.amazonaws.com '
      safebreachsimulationid: {}
      samaccountname: {}
      sansstage: {}
      sectorofaffectedparty: {}
      securitygroup: {}
      securitygroupid: {}
      severity: {}
      signature: {}
      signindatetime: {}
      sixgillalertid: {}
      sixgillcontent: {}
      sixgillthreatlevel: {}
      sixgillthreattype: {}
      sizenumberofemployees: {}
      sizeturnover: {}
      skuname: {}
      skutier: {}
      sla: {}
      slaField: {}
      sourcehostname: {}
      sourceip: {}
      src: {}
      srchostname: {}
      srcntdomain: {}
      srcos: {}
      srcuser: {}
      subscriptionassignedby: {}
      subscriptioncreatedby: {}
      subscriptioncreatedon: {}
      subscriptiondescription: {}
      subscriptionid: {}
      subscriptionname: {}
      subscriptiontype: {}
      subscriptionupdatedby: {}
      subscriptionupdatedon: {}
      subtype: {}
      successfullogin: {}
      systemdefault: {}
      systems: {}
      targetfirewallversion: {}
      telephoneno: {}
      terminatedaction: {}
      threatactor: {}
      trapsid: {}
      travelmaplink: {}
      triggeredsecurityprofile: {}
      type: {}
      url: {}
      urlsslverification: {}
      user: {}
      useraccountcontrol: {}
      userdisabledstatus: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vpc: {}
      vpcid: {}
      vpcsubnet: {}
      vulnerabilitycategory: {}
      whereisdatahosted: {}
      xdralertcount: {}
      xdralerts: {}
      xdrassigneduseremail: {}
      xdrassigneduserprettyname: {}
      xdrdescription: {}
      xdrdetectiontime: {}
      xdrfileartifacts: {}
      xdrhighseverityalertcount: {}
      xdrhostcount: {}
      xdrincidentid: {}
      xdrlowseverityalertcount: {}
      xdrmediumseverityalertcount: {}
      xdrnetworkartifacts: {}
      xdrnotes: {}
      xdrresolvecomment: {}
      xdrstatus: {}
      xdrurl: {}
      xdrusercount: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: Change the properties of an incident
      id: 84f4d292-20f9-4e10-81d2-c5f1891030e3
      iscommand: true
      name: setIncident-with-S3-full-FQDN
      script: Builtin|||setIncident
      type: regular
      version: -1
    taskid: 84f4d292-20f9-4e10-81d2-c5f1891030e3
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1760,
          "y": 535
        }
      }
  "41":
    id: "41"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "52"
    note: false
    quietmode: 0
    scriptarguments:
      accountgroups: {}
      accountid: {}
      accountname: {}
      activedirectoryaccountstatus: {}
      activedirectorydisplayname: {}
      activedirectorypasswordstatus: {}
      addLabels: {}
      affecteddata: {}
      affecteddatatype: {}
      affectedindividualscontactinformation: {}
      agentid: {}
      app: {}
      approximatenumberofaffecteddatasubjects: {}
      arn: {}
      assetid: {}
      attachmentcount: {}
      attachmentextension: {}
      attachmenthash: {}
      attachmentid: {}
      attachmentname: {}
      attachmentsize: {}
      attachmenttype: {}
      az: {}
      blockedaction: {}
      bucketname: {}
      bugtraq: {}
      cidrblock: {}
      city: {}
      clarotyalertresolved: {}
      clarotyalerttype: {}
      clarotycategory: {}
      clarotynetworkid: {}
      clarotyrelatedassets: {}
      clarotyresourceid: {}
      clarotysiteid: {}
      closeNotes: {}
      closeReason: {}
      code42alerttype: {}
      code42fileevents: {}
      commandline: {}
      companyaddress: {}
      companycity: {}
      companycountry: {}
      companyhasinsuranceforthebreach: {}
      companyname: {}
      companypostalcode: {}
      companypropertystatus: {}
      contactaddress: {}
      contactname: {}
      coordinates: {}
      country: {}
      countrywherebusinesshasitsmainestablishment: {}
      countrywherethebreachtookplace: {}
      criticalassets: {}
      customFields: {}
      cve: {}
      cvss: {}
      cymulateimmediatethreatsattackid: {}
      cymulateimmediatethreatsfiletype: {}
      cymulateimmediatethreatsid: {}
      cymulateimmediatethreatsmitigations: {}
      cymulateimmediatethreatsmodule: {}
      cymulateimmediatethreatspayloadname: {}
      cymulateimmediatethreatsstatus: {}
      cymulateimmediatethreatsvector: {}
      dataencryptionstatus: {}
      datetimeofthebreach: {}
      dbotprediction: {}
      dbotpredictionprobability: {}
      dbottextsuggestionhighlighted: {}
      deleteEmptyField: {}
      dest: {}
      desthostname: {}
      destinationip: {}
      destntdomain: {}
      destos: {}
      details: {}
      detectionendtime: {}
      detectionid: {}
      detectionticketed: {}
      detectionupdatetime: {}
      detectionurl: {}
      devicegsuiteaccountstatus: {}
      devicename: {}
      dpoemailaddress: {}
      duoaccountstatus: {}
      duration: {}
      emailaddress: {}
      emailauthenticitycheck: {}
      emailautoreply: {}
      emailbcc: {}
      emailbody: {}
      emailbodyformat: {}
      emailbodyhtml: {}
      emailcc: {}
      emailclassification: {}
      emailclientname: {}
      emailfrom: {}
      emailheaders: {}
      emailhtml: {}
      emailinreplyto: {}
      emailkeywords: {}
      emailmessageid: {}
      emailreceived: {}
      emailreplyto: {}
      emailreturnpath: {}
      emailsenderip: {}
      emailsize: {}
      emailsource: {}
      emailsubject: {}
      emailto: {}
      emailtocount: {}
      emailurlclicked: {}
      employeedisplayname: {}
      employeeemail: {}
      employeemanageremail: {}
      exfiltratedfiles: {}
      expanseexposuretype: {}
      expanserawjsonevent: {}
      expanseseverity: {}
      extrahopapplianceid: {}
      extrahophostname: {}
      filehash: {}
      filename: {}
      filepath: {}
      filesize: {}
      firstseen: {}
      globaldirectoryvisibility: {}
      googleaccountstatus: {}
      googleadminrolesstatus: {}
      googledisplayname: {}
      googledrivestatus: {}
      googlemailstatus: {}
      googlepasswordstatus: {}
      helloworldid: {}
      helloworldstatus: {}
      helloworldtype: {}
      hostname: {}
      id: {}
      indenideviceid: {}
      indeniissueid: {}
      infectedhosts: {}
      investigationstage: {}
      isolated: {}
      isthedatasubjecttodpia: {}
      labels: {}
      lastmodifiedby: {}
      lastmodifiedon: {}
      lastseen: {}
      likelyimpact: {}
      loginattemptcount: {}
      macaddress: {}
      mailboxdelegation: {}
      maliciousbehavior: {}
      maliciouscauseifthecauseisamaliciousattack: {}
      malwarefamily: {}
      measurestomitigate: {}
      name: {}
      niststage: {}
      occurred: {}
      offboardingdate: {}
      offboardingstage: {}
      oktaaccountstatus: {}
      owner: {}
      parentprocessid: {}
      participants: {}
      passwordexpirationstatus: {}
      phase: {}
      phishingsubtype: {}
      pid: {}
      policydeleted: {}
      policydescription: {}
      policydetails: {}
      policyid: {}
      policyname: {}
      policyrecommendation: {}
      policyremediable: {}
      policyseverity: {}
      policytype: {}
      possiblecauseofthebreach: {}
      postalcode: {}
      previouscoordinates: {}
      previouscountry: {}
      previoussignindatetime: {}
      previoussourceip: {}
      prismacloudcomputeactivitytype: {}
      prismacloudcomputeappid: {}
      prismacloudcomputecategory: {}
      prismacloudcomputecollections: {}
      prismacloudcomputecommand: {}
      prismacloudcomputecontainer: {}
      prismacloudcomputecredentialid: {}
      prismacloudcomputedistribution: {}
      prismacloudcomputeerror: {}
      prismacloudcomputeforensic: {}
      prismacloudcomputefqdn: {}
      prismacloudcomputefunction: {}
      prismacloudcomputehost: {}
      prismacloudcomputeimage: {}
      prismacloudcomputeinteractive: {}
      prismacloudcomputekubernetesresource: {}
      prismacloudcomputelabels: {}
      prismacloudcomputeline: {}
      prismacloudcomputelogfile: {}
      prismacloudcomputemarkdown: {}
      prismacloudcomputemessage: {}
      prismacloudcomputeproject: {}
      prismacloudcomputeprotected: {}
      prismacloudcomputeprovider: {}
      prismacloudcomputerawalertjson: {}
      prismacloudcomputeregion: {}
      prismacloudcomputeregistry: {}
      prismacloudcomputerule: {}
      prismacloudcomputeruntime: {}
      prismacloudcomputeservice: {}
      prismacloudcomputeservicetype: {}
      prismacloudcomputetotal: {}
      prismacloudcomputetype: {}
      prismacloudcomputeuser: {}
      prismacloudid: {}
      prismacloudreason: {}
      prismacloudrules: {}
      prismacloudstatus: {}
      prismacloudtime: {}
      privateip: {}
      publicip: {}
      rating: {}
      rawparticipants: {}
      region: {}
      regionid: {}
      replacePlaybook: {}
      reporteremailaddress: {}
      resourceapiname: {}
      resourcecloudtype: {}
      resourceid: {}
      resourcename: {}
      resourcetype: {}
      riskrating: {}
      riskscore: {}
      roles: {}
      rrn: {}
      s3html: {}
      s3url:
        simple: 'https://${incident.bucketname}.s3.${incident.regionid}.amazonaws.com '
      safebreachsimulationid: {}
      samaccountname: {}
      sansstage: {}
      sectorofaffectedparty: {}
      securitygroup: {}
      securitygroupid: {}
      severity: {}
      signature: {}
      signindatetime: {}
      sixgillalertid: {}
      sixgillcontent: {}
      sixgillthreatlevel: {}
      sixgillthreattype: {}
      sizenumberofemployees: {}
      sizeturnover: {}
      skuname: {}
      skutier: {}
      sla: {}
      slaField: {}
      sourcehostname: {}
      sourceip: {}
      src: {}
      srchostname: {}
      srcntdomain: {}
      srcos: {}
      srcuser: {}
      subscriptionassignedby: {}
      subscriptioncreatedby: {}
      subscriptioncreatedon: {}
      subscriptiondescription: {}
      subscriptionid: {}
      subscriptionname: {}
      subscriptiontype: {}
      subscriptionupdatedby: {}
      subscriptionupdatedon: {}
      subtype: {}
      successfullogin: {}
      systemdefault: {}
      systems: {}
      targetfirewallversion: {}
      telephoneno: {}
      terminatedaction: {}
      threatactor: {}
      trapsid: {}
      travelmaplink: {}
      triggeredsecurityprofile: {}
      type: {}
      url: {}
      urlsslverification: {}
      user: {}
      useraccountcontrol: {}
      userdisabledstatus: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vpc: {}
      vpcid: {}
      vpcsubnet: {}
      vulnerabilitycategory: {}
      whereisdatahosted: {}
      xdralertcount: {}
      xdralerts: {}
      xdrassigneduseremail: {}
      xdrassigneduserprettyname: {}
      xdrdescription: {}
      xdrdetectiontime: {}
      xdrfileartifacts: {}
      xdrhighseverityalertcount: {}
      xdrhostcount: {}
      xdrincidentid: {}
      xdrlowseverityalertcount: {}
      xdrmediumseverityalertcount: {}
      xdrnetworkartifacts: {}
      xdrnotes: {}
      xdrresolvecomment: {}
      xdrstatus: {}
      xdrurl: {}
      xdrusercount: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: Change the properties of an incident
      id: 406fd381-53b0-409d-83f1-db7d9c9e81b1
      iscommand: true
      name: setIncident-with-S3-full-FQDN
      script: Builtin|||setIncident
      type: regular
      version: -1
    taskid: 406fd381-53b0-409d-83f1-db7d9c9e81b1
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 2160,
          "y": 445
        }
      }
  "42":
    id: "42"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "46"
    note: false
    quietmode: 0
    scriptarguments:
      attributes: {}
      custom-field-data: {}
      custom-field-type: {}
      dn:
        simple: ${ActiveDirectory.Users.manager}
      email: {}
      limit: {}
      name: {}
      user-account-control-out: {}
      username: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Active Directory Query v2
      description: Retrieves detailed information about a user account. The user can
        be specified by name, email address, or as an Active Directory Distinguished
        Name (DN). If no filter is specified, all users are returned.
      id: d76d8693-9cd6-4d4e-8615-2a9c85f45a83
      iscommand: true
      name: ad-get-user-AWS-find-manager
      script: Active Directory Query v2|||ad-get-user
      type: regular
      version: -1
    taskid: d76d8693-9cd6-4d4e-8615-2a9c85f45a83
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -470,
          "y": 960
        }
      }
  "43":
    id: "43"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "47"
    note: false
    quietmode: 0
    scriptarguments:
      attributes: {}
      custom-field-data: {}
      custom-field-type: {}
      dn:
        simple: ${ActiveDirectory.Users.manager}
      email: {}
      limit: {}
      name: {}
      user-account-control-out: {}
      username: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Active Directory Query v2
      description: Retrieves detailed information about a user account. The user can
        be specified by name, email address, or as an Active Directory Distinguished
        Name (DN). If no filter is specified, all users are returned.
      id: b41554c5-99ca-46c1-82a8-c7e95f7d7830
      iscommand: true
      name: ad-get-user-AWS-find-manager
      script: Active Directory Query v2|||ad-get-user
      type: regular
      version: -1
    taskid: b41554c5-99ca-46c1-82a8-c7e95f7d7830
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -90,
          "y": 1070
        }
      }
  "44":
    id: "44"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "48"
    note: false
    quietmode: 0
    scriptarguments:
      additionalHeader: {}
      attachCIDs: {}
      attachIDs: {}
      attachNames: {}
      bcc: {}
      body:
        simple: "Your name has been associated with a public S3 bucket in AWS that\
          \ is unauthorized. \nPlease call the SOC at 1-800-222-3333.  \n\nPOLICY:\
          \ ${incident.policyname} \nS3 Bucket Name:  ${incident.bucketname}\nS3 URL:\
          \  ${incident.s3url} \nS3 Owner:   ${incident.resourceid}\nAccountID:  \
          \ ${incident.accountid}\nPrisma Alert ID: ${incident.prismacloudid}\nAdmin\
          \ AWS URL: ${incident.url} "
      cc: {}
      htmlBody: {}
      raw_message: {}
      replyTo: {}
      subject:
        simple: ALERT!!!! ${incident.policyname}
      templateParams: {}
      to:
        complex:
          accessor: Email
          filters:
          - - left:
                iscontext: true
                value:
                  simple: Account.Email.Address
              operator: isNotExists
          root: Account
      transientFile: {}
      transientFileCID: {}
      transientFileContent: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Mail Sender (New)
      description: Send an email
      id: faee312f-a320-479d-87eb-6c70d3cce3da
      iscommand: true
      name: send-email-to-S3-owner-and-manager
      script: Mail Sender (New)|||send-mail
      type: regular
      version: -1
    taskid: faee312f-a320-479d-87eb-6c70d3cce3da
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -470,
          "y": 1355
        }
      }
  "45":
    id: "45"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "49"
    note: false
    quietmode: 0
    scriptarguments:
      additionalHeader: {}
      attachCIDs: {}
      attachIDs: {}
      attachNames: {}
      bcc: {}
      body:
        simple: "Your name has been associated with a public S3 bucket in AWS that\
          \ is unauthorized. \nPlease call the SOC at 1-800-222-3333.  \n\nPOLICY:\
          \ ${incident.policyname} \nS3 Bucket Name:  ${incident.bucketname}\nS3 URL:\
          \  ${incident.s3url} \nS3 Owner:   ${incident.resourceid}\nAccountID:  \
          \ ${incident.accountid}\nPrisma Alert ID: ${incident.prismacloudid}\nAdmin\
          \ AWS URL: ${incident.url} "
      cc: {}
      htmlBody: {}
      raw_message: {}
      replyTo: {}
      subject:
        simple: ALERT!!!! ${incident.policyname}
      templateParams: {}
      to:
        complex:
          accessor: Email
          filters:
          - - left:
                iscontext: true
                value:
                  simple: Account.Email.Address
              operator: isNotExists
          root: Account
      transientFile: {}
      transientFileCID: {}
      transientFileContent: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Mail Sender (New)
      description: Send an email
      id: 954d8adc-a625-45e0-863b-021afe6b0c11
      iscommand: true
      name: send-email-to-S3-owner-and-manager
      script: Mail Sender (New)|||send-mail
      type: regular
      version: -1
    taskid: 954d8adc-a625-45e0-863b-021afe6b0c11
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -90,
          "y": 1470
        }
      }
  "46":
    continueonerror: true
    id: "46"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "44"
    note: false
    quietmode: 0
    scriptarguments:
      alert-id:
        simple: ${incident.prismacloudid}
    separatecontext: false
    skipunavailable: false
    task:
      brand: RedLock_erik
      id: 61a293be-c07d-4a73-8138-c04d3d101518
      iscommand: true
      name: redlock-get-remediation-details
      script: RedLock_erik|||redlock-get-remediation-details
      type: regular
      version: -1
    taskid: 61a293be-c07d-4a73-8138-c04d3d101518
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -470,
          "y": 1140
        }
      }
  "47":
    continueonerror: true
    id: "47"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "45"
    note: false
    quietmode: 0
    scriptarguments:
      alert-id:
        simple: ${incident.prismacloudid}
    separatecontext: false
    skipunavailable: false
    task:
      brand: RedLock_erik
      id: 6dfe0d4a-98a5-4d85-8d16-c3a0cafbd847
      iscommand: true
      name: redlock-get-remediation-details
      script: RedLock_erik|||redlock-get-remediation-details
      type: regular
      version: -1
    taskid: 6dfe0d4a-98a5-4d85-8d16-c3a0cafbd847
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -90,
          "y": 1270
        }
      }
  "48":
    id: "48"
    ignoreworker: false
    nexttasks:
      CLOSECASE:
      - "50"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    sla:
      days: 3
      hours: 0
      weeks: 0
    task:
      brand: ""
      description: Manually review and investigate this incident.
      id: 8fd695bd-615e-4e93-844f-6bbeec34346b
      iscommand: false
      name: Manually review the incident.
      type: condition
      version: -1
    taskid: 8fd695bd-615e-4e93-844f-6bbeec34346b
    timertriggers:
    - action: start
      fieldname: remediationsla
    type: condition
    view: |-
      {
        "position": {
          "x": -470,
          "y": 1595
        }
      }
  "49":
    id: "49"
    ignoreworker: false
    nexttasks:
      CLOSECASE:
      - "51"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    sla:
      days: 3
      hours: 0
      weeks: 0
    task:
      brand: ""
      description: Manually review and investigate this incident.
      id: 9f9d9ef7-3534-4726-894c-f26e5de76e0e
      iscommand: false
      name: Manually review the incident.
      type: condition
      version: -1
    taskid: 9f9d9ef7-3534-4726-894c-f26e5de76e0e
    timertriggers:
    - action: start
      fieldname: remediationsla
    type: condition
    view: |-
      {
        "position": {
          "x": -90,
          "y": 1710
        }
      }
  "50":
    id: "50"
    ignoreworker: false
    note: false
    quietmode: 0
    scriptarguments:
      assetid: {}
      closeNotes: {}
      closeReason: {}
      code42alerttype: {}
      emailclassification: {}
      id: {}
      phishingsubtype: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: Close the current incident
      id: 0f4b8a11-25dd-420c-8615-ee52d49d4762
      iscommand: true
      name: closeInvestigation
      script: Builtin|||closeInvestigation
      type: regular
      version: -1
    taskid: 0f4b8a11-25dd-420c-8615-ee52d49d4762
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -470,
          "y": 1815
        }
      }
  "51":
    id: "51"
    ignoreworker: false
    note: false
    quietmode: 0
    scriptarguments:
      assetid: {}
      closeNotes: {}
      closeReason: {}
      code42alerttype: {}
      emailclassification: {}
      id: {}
      phishingsubtype: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: Close the current incident
      id: a7826d96-5b8e-42ae-8ac1-5834de5d6cfe
      iscommand: true
      name: closeInvestigation
      script: Builtin|||closeInvestigation
      type: regular
      version: -1
    taskid: a7826d96-5b8e-42ae-8ac1-5834de5d6cfe
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -90,
          "y": 1980
        }
      }
  "52":
    id: "52"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "53"
    note: false
    quietmode: 0
    scriptarguments:
      attributes: {}
      custom-field-data: {}
      custom-field-type: {}
      dn: {}
      email: {}
      limit: {}
      name:
        simple: ${incident.accountname}
      user-account-control-out: {}
      username: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Active Directory Query v2
      description: Retrieves detailed information about a user account. The user can
        be specified by name, email address, or as an Active Directory Distinguished
        Name (DN). If no filter is specified, all users are returned.
      id: 28aec788-5488-4058-83b5-f2a870d9b0e9
      iscommand: true
      name: ad-get-user-AWS-account-name
      script: Active Directory Query v2|||ad-get-user
      type: regular
      version: -1
    taskid: 28aec788-5488-4058-83b5-f2a870d9b0e9
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 2160,
          "y": 650
        }
      }
  "53":
    id: "53"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "55"
    note: false
    quietmode: 0
    scriptarguments:
      attributes: {}
      custom-field-data: {}
      custom-field-type: {}
      dn:
        simple: ${ActiveDirectory.Users.manager}
      email: {}
      limit: {}
      name: {}
      user-account-control-out: {}
      username: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Active Directory Query v2
      description: Retrieves detailed information about a user account. The user can
        be specified by name, email address, or as an Active Directory Distinguished
        Name (DN). If no filter is specified, all users are returned.
      id: 15034ec2-064a-4dc6-8f72-b64ee17ace9a
      iscommand: true
      name: ad-get-user-AWS-find-manager
      script: Active Directory Query v2|||ad-get-user
      type: regular
      version: -1
    taskid: 15034ec2-064a-4dc6-8f72-b64ee17ace9a
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 2160,
          "y": 855
        }
      }
  "54":
    id: "54"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "68"
    note: false
    quietmode: 0
    scriptarguments:
      additionalHeader: {}
      attachCIDs: {}
      attachIDs: {}
      attachNames: {}
      bcc: {}
      body:
        simple: "Your name has been associated with a public S3 bucket in AWS that\
          \ is unauthorized. \nPlease call the SOC at 1-800-222-3333.  \n\nPOLICY:\
          \ ${incident.policyname} \nS3 Bucket Name:  ${incident.bucketname}\nS3 URL:\
          \  ${incident.s3url} \nS3 Owner:   ${incident.resourceid}\nAccountID:  \
          \ ${incident.accountid}\nPrisma Alert ID: ${incident.prismacloudid}\nAdmin\
          \ AWS URL: ${incident.url} "
      cc: {}
      htmlBody: {}
      raw_message: {}
      replyTo: {}
      subject:
        simple: ALERT!!!! ${incident.policyname}
      templateParams: {}
      to:
        complex:
          accessor: Email
          filters:
          - - left:
                iscontext: true
                value:
                  simple: Account.Email.Address
              operator: isNotExists
          root: Account
      transientFile: {}
      transientFileCID: {}
      transientFileContent: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Mail Sender (New)
      description: Send an email
      id: 5d20db04-f7c4-415d-83fb-29716709d10d
      iscommand: true
      name: send-email-to-S3-owner-and-manager
      script: Mail Sender (New)|||send-mail
      type: regular
      version: -1
    taskid: 5d20db04-f7c4-415d-83fb-29716709d10d
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 2160,
          "y": 1260
        }
      }
  "55":
    continueonerror: true
    id: "55"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "54"
    note: false
    quietmode: 0
    scriptarguments:
      alert-id:
        simple: ${incident.prismacloudid}
    separatecontext: false
    skipunavailable: false
    task:
      brand: RedLock_erik
      id: 0e14318b-f3fd-4e90-8ac7-0d44c6dd4700
      iscommand: true
      name: redlock-get-remediation-details
      script: RedLock_erik|||redlock-get-remediation-details
      type: regular
      version: -1
    taskid: 0e14318b-f3fd-4e90-8ac7-0d44c6dd4700
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 2160,
          "y": 1055
        }
      }
  "56":
    id: "56"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "57"
    note: false
    quietmode: 0
    scriptarguments:
      attributes: {}
      custom-field-data: {}
      custom-field-type: {}
      dn: {}
      email: {}
      limit: {}
      name:
        simple: ${incident.accountname}
      user-account-control-out: {}
      username: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Active Directory Query v2
      description: Retrieves detailed information about a user account. The user can
        be specified by name, email address, or as an Active Directory Distinguished
        Name (DN). If no filter is specified, all users are returned.
      id: 62c7965e-7e04-44a6-851d-67fccfe48fdd
      iscommand: true
      name: ad-get-user-AWS-account-name
      script: Active Directory Query v2|||ad-get-user
      type: regular
      version: -1
    taskid: 62c7965e-7e04-44a6-851d-67fccfe48fdd
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1760,
          "y": 745
        }
      }
  "57":
    id: "57"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "58"
    note: false
    quietmode: 0
    scriptarguments:
      attributes: {}
      custom-field-data: {}
      custom-field-type: {}
      dn:
        simple: ${ActiveDirectory.Users.manager}
      email: {}
      limit: {}
      name: {}
      user-account-control-out: {}
      username: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Active Directory Query v2
      description: Retrieves detailed information about a user account. The user can
        be specified by name, email address, or as an Active Directory Distinguished
        Name (DN). If no filter is specified, all users are returned.
      id: 4f45c905-b8a3-4595-8385-5b50a506ce93
      iscommand: true
      name: ad-get-user-AWS-find-manager
      script: Active Directory Query v2|||ad-get-user
      type: regular
      version: -1
    taskid: 4f45c905-b8a3-4595-8385-5b50a506ce93
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1760,
          "y": 950
        }
      }
  "58":
    continueonerror: true
    id: "58"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "59"
    note: false
    quietmode: 0
    scriptarguments:
      alert-id:
        simple: ${incident.prismacloudid}
    separatecontext: false
    skipunavailable: false
    task:
      brand: RedLock_erik
      id: 859fa382-2097-4460-8370-20a9645d9480
      iscommand: true
      name: redlock-get-remediation-details
      script: RedLock_erik|||redlock-get-remediation-details
      type: regular
      version: -1
    taskid: 859fa382-2097-4460-8370-20a9645d9480
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1760,
          "y": 1175
        }
      }
  "59":
    id: "59"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "66"
    note: false
    quietmode: 0
    scriptarguments:
      additionalHeader: {}
      attachCIDs: {}
      attachIDs: {}
      attachNames: {}
      bcc: {}
      body:
        simple: "Your name has been associated with a public S3 bucket in AWS that\
          \ is unauthorized. \nPlease call the SOC at 1-800-222-3333.  \n\nPOLICY:\
          \ ${incident.policyname} \nS3 Bucket Name:  ${incident.bucketname}\nS3 URL:\
          \  ${incident.s3url} \nS3 Owner:   ${incident.resourceid}\nAccountID:  \
          \ ${incident.accountid}\nPrisma Alert ID: ${incident.prismacloudid}\nAdmin\
          \ AWS URL: ${incident.url} "
      cc: {}
      htmlBody: {}
      raw_message: {}
      replyTo: {}
      subject:
        simple: ALERT!!!! ${incident.policyname}
      templateParams: {}
      to:
        complex:
          accessor: Email
          filters:
          - - left:
                iscontext: true
                value:
                  simple: Account.Email.Address
              operator: isNotExists
          root: Account
      transientFile: {}
      transientFileCID: {}
      transientFileContent: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Mail Sender (New)
      description: Send an email
      id: 05b3212a-1da9-4915-8acc-06059ffb8675
      iscommand: true
      name: send-email-to-S3-owner-and-manager
      script: Mail Sender (New)|||send-mail
      type: regular
      version: -1
    taskid: 05b3212a-1da9-4915-8acc-06059ffb8675
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1760,
          "y": 1405
        }
      }
  "60":
    id: "60"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "61"
    note: false
    quietmode: 0
    scriptarguments:
      attributes: {}
      custom-field-data: {}
      custom-field-type: {}
      dn: {}
      email: {}
      limit: {}
      name:
        simple: ${incident.accountname}
      user-account-control-out: {}
      username: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Active Directory Query v2
      description: Retrieves detailed information about a user account. The user can
        be specified by name, email address, or as an Active Directory Distinguished
        Name (DN). If no filter is specified, all users are returned.
      id: 9b98af92-d7d9-4ae7-8f4b-fcb0678defa7
      iscommand: true
      name: ad-get-user-AWS-account-name
      script: Active Directory Query v2|||ad-get-user
      type: regular
      version: -1
    taskid: 9b98af92-d7d9-4ae7-8f4b-fcb0678defa7
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1340,
          "y": 880
        }
      }
  "61":
    id: "61"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "62"
    note: false
    quietmode: 0
    scriptarguments:
      attributes: {}
      custom-field-data: {}
      custom-field-type: {}
      dn:
        simple: ${ActiveDirectory.Users.manager}
      email: {}
      limit: {}
      name: {}
      user-account-control-out: {}
      username: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Active Directory Query v2
      description: Retrieves detailed information about a user account. The user can
        be specified by name, email address, or as an Active Directory Distinguished
        Name (DN). If no filter is specified, all users are returned.
      id: b94de788-4d86-423e-8537-41586ecbd54b
      iscommand: true
      name: ad-get-user-AWS-find-manager
      script: Active Directory Query v2|||ad-get-user
      type: regular
      version: -1
    taskid: b94de788-4d86-423e-8537-41586ecbd54b
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1340,
          "y": 1100
        }
      }
  "62":
    continueonerror: true
    id: "62"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "63"
    note: false
    quietmode: 0
    scriptarguments:
      alert-id:
        simple: ${incident.prismacloudid}
    separatecontext: false
    skipunavailable: false
    task:
      brand: RedLock_erik
      id: 25a61f2f-d358-47de-8294-ca2f3fbfdcef
      iscommand: true
      name: redlock-get-remediation-details
      script: RedLock_erik|||redlock-get-remediation-details
      type: regular
      version: -1
    taskid: 25a61f2f-d358-47de-8294-ca2f3fbfdcef
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1340,
          "y": 1310
        }
      }
  "63":
    id: "63"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "64"
    note: false
    quietmode: 0
    scriptarguments:
      additionalHeader: {}
      attachCIDs: {}
      attachIDs: {}
      attachNames: {}
      bcc: {}
      body:
        simple: "Your name has been associated with a public S3 bucket in AWS that\
          \ is unauthorized. \nPlease call the SOC at 1-800-222-3333.  \n\nPOLICY:\
          \ ${incident.policyname} \nS3 Bucket Name:  ${incident.bucketname}\nS3 URL:\
          \  ${incident.s3url} \nS3 Owner:   ${incident.resourceid}\nAccountID:  \
          \ ${incident.accountid}\nPrisma Alert ID: ${incident.prismacloudid}\nAdmin\
          \ AWS URL: ${incident.url} "
      cc: {}
      htmlBody: {}
      raw_message: {}
      replyTo: {}
      subject:
        simple: ALERT!!!! ${incident.policyname}
      templateParams: {}
      to:
        complex:
          accessor: Email
          filters:
          - - left:
                iscontext: true
                value:
                  simple: Account.Email.Address
              operator: isNotExists
          root: Account
      transientFile: {}
      transientFileCID: {}
      transientFileContent: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Mail Sender (New)
      description: Send an email
      id: 0e29ad07-47f1-489b-80be-ba467892b874
      iscommand: true
      name: send-email-to-S3-owner-and-manager
      script: Mail Sender (New)|||send-mail
      type: regular
      version: -1
    taskid: 0e29ad07-47f1-489b-80be-ba467892b874
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1340,
          "y": 1515
        }
      }
  "64":
    id: "64"
    ignoreworker: false
    nexttasks:
      CLOSE CASE:
      - "65"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    sla:
      days: 3
      hours: 0
      weeks: 0
    task:
      brand: ""
      description: Manually review and investigate this incident.
      id: 8806a307-631f-434c-84e1-5129b08e6f87
      iscommand: false
      name: Manually review the incident.
      type: condition
      version: -1
    taskid: 8806a307-631f-434c-84e1-5129b08e6f87
    timertriggers:
    - action: start
      fieldname: remediationsla
    type: condition
    view: |-
      {
        "position": {
          "x": 1340,
          "y": 1720
        }
      }
  "65":
    id: "65"
    ignoreworker: false
    note: false
    quietmode: 0
    scriptarguments:
      assetid: {}
      closeNotes: {}
      closeReason: {}
      code42alerttype: {}
      emailclassification: {}
      id: {}
      phishingsubtype: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: Close the current incident
      id: 2c22ff4e-1949-4e43-8f12-1d5fdcbdcee0
      iscommand: true
      name: closeInvestigation
      script: Builtin|||closeInvestigation
      type: regular
      version: -1
    taskid: 2c22ff4e-1949-4e43-8f12-1d5fdcbdcee0
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1340,
          "y": 1930
        }
      }
  "66":
    id: "66"
    ignoreworker: false
    nexttasks:
      CLOSE CASE:
      - "67"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    sla:
      days: 3
      hours: 0
      weeks: 0
    task:
      brand: ""
      description: Manually review and investigate this incident.
      id: 19dbcfd7-bcc3-4240-8c41-c6ec5786e583
      iscommand: false
      name: Manually review the incident.
      type: condition
      version: -1
    taskid: 19dbcfd7-bcc3-4240-8c41-c6ec5786e583
    timertriggers:
    - action: start
      fieldname: remediationsla
    type: condition
    view: |-
      {
        "position": {
          "x": 1760,
          "y": 1615
        }
      }
  "67":
    id: "67"
    ignoreworker: false
    note: false
    quietmode: 0
    scriptarguments:
      assetid: {}
      closeNotes: {}
      closeReason: {}
      code42alerttype: {}
      emailclassification: {}
      id: {}
      phishingsubtype: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: Close the current incident
      id: 8bc3772b-69c2-4a1a-8139-992eeced2eff
      iscommand: true
      name: closeInvestigation
      script: Builtin|||closeInvestigation
      type: regular
      version: -1
    taskid: 8bc3772b-69c2-4a1a-8139-992eeced2eff
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 1760,
          "y": 1835
        }
      }
  "68":
    id: "68"
    ignoreworker: false
    nexttasks:
      CLOSE CASE:
      - "69"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    sla:
      days: 3
      hours: 0
      weeks: 0
    task:
      brand: ""
      description: Manually review and investigate this incident.
      id: 4fb128d1-724f-4c07-892a-f15cb37c9270
      iscommand: false
      name: Manually review the incident.
      type: condition
      version: -1
    taskid: 4fb128d1-724f-4c07-892a-f15cb37c9270
    timertriggers:
    - action: start
      fieldname: remediationsla
    type: condition
    view: |-
      {
        "position": {
          "x": 2160,
          "y": 1480
        }
      }
  "69":
    id: "69"
    ignoreworker: false
    note: false
    quietmode: 0
    scriptarguments:
      assetid: {}
      closeNotes: {}
      closeReason: {}
      code42alerttype: {}
      emailclassification: {}
      id: {}
      phishingsubtype: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: Close the current incident
      id: ac442c18-9394-463b-8722-e2e15ba4df1c
      iscommand: true
      name: closeInvestigation
      script: Builtin|||closeInvestigation
      type: regular
      version: -1
    taskid: ac442c18-9394-463b-8722-e2e15ba4df1c
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 2160,
          "y": 1710
        }
      }
  "70":
    continueonerror: true
    id: "70"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "27"
    note: false
    quietmode: 0
    scriptarguments:
      value:
        simple: '!redlock-remediate-alerts alert-id=${incident.prismacloudid}'
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Prints text to war room (Markdown supported)
      id: 2cfa40ed-0046-4f2b-8f6f-55d96edab451
      iscommand: false
      name: Print XSOAR Remediation CLI for SOC analyst
      script: Print
      type: regular
      version: -1
    taskid: 2cfa40ed-0046-4f2b-8f6f-55d96edab451
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -930,
          "y": 1500
        }
      }
  "71":
    id: "71"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "70"
    note: false
    quietmode: 0
    scriptarguments:
      accountgroups: {}
      accountid: {}
      accountinformationbreached: {}
      accountname: {}
      activedirectoryaccountstatus: {}
      activedirectorydisplayname: {}
      activedirectorypasswordstatus: {}
      addLabels: {}
      affecteddata: {}
      affecteddatatype: {}
      affectedindividualscontactinformation: {}
      agentid: {}
      app: {}
      approximatenumberofaffecteddatasubjects: {}
      arn: {}
      assetid: {}
      associatedmaliciousdomains: {}
      attachmentcount: {}
      attachmentextension: {}
      attachmenthash: {}
      attachmentid: {}
      attachmentname: {}
      attachmentsize: {}
      attachmenttype: {}
      attackerhostisolated: {}
      attackeripblocked: {}
      az: {}
      blockedaction: {}
      bucketname: {}
      bugtraq: {}
      cidrblock: {}
      city: {}
      clarotyalertresolved: {}
      clarotyalerttype: {}
      clarotycategory: {}
      clarotynetworkid: {}
      clarotyrelatedassets: {}
      clarotyresourceid: {}
      clarotysiteid: {}
      closeNotes: {}
      closeReason: {}
      code42alerttype: {}
      code42fileevents: {}
      commandline: {}
      companyaddress: {}
      companycity: {}
      companycountry: {}
      companyhasinsuranceforthebreach: {}
      companyname: {}
      companypostalcode: {}
      companypropertystatus: {}
      contactaddress: {}
      contactemailaddress: {}
      contactname: {}
      contacttelephonenumber: {}
      coordinates: {}
      country: {}
      countrywherebusinesshasitsmainestablishment: {}
      countrywherethebreachtookplace: {}
      criticalassets: {}
      customFields: {}
      cve: {}
      cvss: {}
      cymulateimmediatethreatsattackid: {}
      cymulateimmediatethreatsfiletype: {}
      cymulateimmediatethreatsid: {}
      cymulateimmediatethreatsmitigations: {}
      cymulateimmediatethreatsmodule: {}
      cymulateimmediatethreatspayloadname: {}
      cymulateimmediatethreatsstatus: {}
      cymulateimmediatethreatsvector: {}
      dataencryptionstatus: {}
      datetimeofthebreach: {}
      dbotprediction: {}
      dbotpredictionprobability: {}
      dbottextsuggestionhighlighted: {}
      deleteEmptyField: {}
      dest: {}
      desthostname: {}
      destinationip: {}
      destinationports: {}
      destntdomain: {}
      destos: {}
      details: {}
      detectionendtime: {}
      detectionid: {}
      detectionticketed: {}
      detectionupdatetime: {}
      detectionurl: {}
      devicegsuiteaccountstatus: {}
      devicename: {}
      digitalguardianactivity: {}
      digitalguardianalarmname: {}
      digitalguardianarcuid: {}
      digitalguardianattachmentfilename: {}
      digitalguardianclassification: {}
      digitalguardiancommandline: {}
      digitalguardiancomputername: {}
      digitalguardiandestinationaddress: {}
      digitalguardiandestinationdnsdomain: {}
      digitalguardianemailrecipient: {}
      digitalguardianemailsender: {}
      digitalguardianemailsubject: {}
      digitalguardianfilename: {}
      digitalguardianparentprocessname: {}
      digitalguardianpolicy: {}
      digitalguardianprocessname: {}
      digitalguardianremoteport: {}
      digitalguardiansensitivity: {}
      digitalguardiansourceaddress: {}
      digitalguardiansourceip: {}
      digitalguardianthreattype: {}
      digitalguardianusername: {}
      dpoemailaddress: {}
      duoaccountstatus: {}
      duration: {}
      emailaddress: {}
      emailauthenticitycheck: {}
      emailautoreply: {}
      emailbcc: {}
      emailbody: {}
      emailbodyformat: {}
      emailbodyhtml: {}
      emailcc: {}
      emailclassification: {}
      emailclientname: {}
      emailfrom: {}
      emailheaders: {}
      emailhtml: {}
      emailinreplyto: {}
      emailkeywords: {}
      emailmessageid: {}
      emailreceived: {}
      emailreplyto: {}
      emailreturnpath: {}
      emailsenderip: {}
      emailsize: {}
      emailsource: {}
      emailsubject: {}
      emailto: {}
      emailtocount: {}
      emailurlclicked: {}
      employeedisplayname: {}
      employeeemail: {}
      employeemanageremail: {}
      exactlywhathappenedandatwhattimes: {}
      exfiltratedfiles: {}
      expanseexposuretype: {}
      expanserawjsonevent: {}
      expanseseverity: {}
      extrahopapplianceid: {}
      extrahophostname: {}
      filehash: {}
      filehashblocked: {}
      filename: {}
      filepath: {}
      filesize: {}
      financialinformationbreached: {}
      firstseen: {}
      globaldirectoryvisibility: {}
      googleaccountstatus: {}
      googleadminrolesstatus: {}
      googledisplayname: {}
      googledrivestatus: {}
      googlemailstatus: {}
      googlepasswordstatus: {}
      grade: {}
      healthinsurancebreached: {}
      helloworldid: {}
      helloworldstatus: {}
      helloworldtype: {}
      hostname: {}
      howcouldinformationsharingwithotherorganizationshavebeenimproved: {}
      howwastheincidentcontainedanderadicated: {}
      howwelldidstaffandmanagementperformindealingwiththeincidentwerethedocumentedproceduresfollowedweretheyadequate: {}
      id: {}
      illusionblackattackerid: {}
      illusionblackattacktype: {}
      illusionblackdecoyid: {}
      illusionblackevents: {}
      illusionblackthreatparse: {}
      illusivenetworkshasforensics: {}
      illusivenetworkshostname: {}
      illusivenetworksid: {}
      illusivenetworkslastseenuser: {}
      illusivenetworkssourceoperatingsystem: {}
      illusivenetworksstepstocrownjewel: {}
      illusivenetworksstepstodomainadmin: {}
      indenideviceid: {}
      indeniissueid: {}
      infectedhostnames: {}
      infectedhosts: {}
      investigationstage: {}
      ippermissions: {}
      isolated: {}
      isthedatasubjecttodpia: {}
      labels: {}
      lastmodifiedby: {}
      lastmodifiedon: {}
      lastseen: {}
      likelyimpact: {}
      loginattemptcount: {}
      logzioalerteventid: {}
      logzioalertid: {}
      logzioalertsummary: {}
      logziotags: {}
      macaddress: {}
      mailboxdelegation: {}
      maliciousbehavior: {}
      maliciouscauseifthecauseisamaliciousattack: {}
      maliciousdomainsblocked: {}
      malwarefamily: {}
      manageremail: {}
      measurestomitigate: {}
      medicalinformationbreached: {}
      name: {}
      niststage: {}
      numberofports: {}
      numberofuniqueports: {}
      occurred: {}
      offboardingdate: {}
      offboardingstage: {}
      oktaaccountstatus: {}
      otherpiidatabreached: {}
      owner: {}
      parentprocessid: {}
      participants: {}
      passwordexpirationstatus: {}
      penteraoperationdetails: {}
      phase: {}
      phishingsubtype: {}
      pid: {}
      piidatatype: {}
      policydeleted: {}
      policydescription: {}
      policydetails: {}
      policyid: {}
      policyname: {}
      policyrecommendation: {}
      policyremediable: {}
      policyseverity: {}
      policytype: {}
      portsblocked: {}
      possiblecauseofthebreach: {}
      postalcode: {}
      previouscoordinates: {}
      previouscountry: {}
      previoussignindatetime: {}
      previoussourceip: {}
      prismacloudcomputeactivitytype: {}
      prismacloudcomputeappid: {}
      prismacloudcomputecategory: {}
      prismacloudcomputecollections: {}
      prismacloudcomputecommand: {}
      prismacloudcomputecontainer: {}
      prismacloudcomputecredentialid: {}
      prismacloudcomputedistribution: {}
      prismacloudcomputeerror: {}
      prismacloudcomputeforensic: {}
      prismacloudcomputefqdn: {}
      prismacloudcomputefunction: {}
      prismacloudcomputehost: {}
      prismacloudcomputeimage: {}
      prismacloudcomputeinteractive: {}
      prismacloudcomputekubernetesresource: {}
      prismacloudcomputelabels: {}
      prismacloudcomputeline: {}
      prismacloudcomputelogfile: {}
      prismacloudcomputemarkdown: {}
      prismacloudcomputemessage: {}
      prismacloudcomputeproject: {}
      prismacloudcomputeprotected: {}
      prismacloudcomputeprovider: {}
      prismacloudcomputerawalertjson: {}
      prismacloudcomputeregion: {}
      prismacloudcomputeregistry: {}
      prismacloudcomputerule: {}
      prismacloudcomputeruntime: {}
      prismacloudcomputeservice: {}
      prismacloudcomputeservicetype: {}
      prismacloudcomputetotal: {}
      prismacloudcomputetype: {}
      prismacloudcomputeuser: {}
      prismacloudid: {}
      prismacloudreason: {}
      prismacloudremediationcli:
        simple: ${Redlock.Alert.Remediation.CLI}
      prismacloudrules: {}
      prismacloudstatus: {}
      prismacloudtime: {}
      privateip: {}
      publicip: {}
      rating: {}
      rawparticipants: {}
      region: {}
      regionid: {}
      replacePlaybook: {}
      reporteremailaddress: {}
      residentnotificationoption: {}
      residentsemailaddress: {}
      resourceapiname: {}
      resourcecloudtype: {}
      resourceid: {}
      resourcename: {}
      resourcetype: {}
      riskrating: {}
      riskscore: {}
      roles: {}
      rrn: {}
      s3html: {}
      s3url: {}
      safebreachsimulationid: {}
      samaccountname: {}
      sansstage: {}
      scansourcetype: {}
      sectorofaffectedparty: {}
      securitygroup: {}
      securitygroupid: {}
      severity: {}
      signature: {}
      signindatetime: {}
      sixgillalertid: {}
      sixgillcontent: {}
      sixgillthreatlevel: {}
      sixgillthreattype: {}
      sizenumberofemployees: {}
      sizeturnover: {}
      skuname: {}
      skutier: {}
      sla: {}
      slaField: {}
      sourcehostname: {}
      sourceip: {}
      sourceusername: {}
      src: {}
      srchostname: {}
      srcntdomain: {}
      srcos: {}
      srcuser: {}
      statewherethebreachtookplace: {}
      subscriptionassignedby: {}
      subscriptioncreatedby: {}
      subscriptioncreatedon: {}
      subscriptiondescription: {}
      subscriptionid: {}
      subscriptionname: {}
      subscriptiontype: {}
      subscriptionupdatedby: {}
      subscriptionupdatedon: {}
      subtype: {}
      successfullogin: {}
      suggestionsanddiscussionofhowtoimprovetheteam: {}
      systemdefault: {}
      systems: {}
      targetfirewallversion: {}
      telephoneno: {}
      terminatedaction: {}
      threatactor: {}
      trapsid: {}
      travelmaplink: {}
      triggeredsecurityprofile: {}
      type: {}
      uniquebiometricdatabreached: {}
      uniqueidentificationnumberbreached: {}
      url: {}
      urlsslverification: {}
      user: {}
      useraccountcontrol: {}
      userdisabledstatus: {}
      username: {}
      vendorid: {}
      vendorproduct: {}
      vpc: {}
      vpcid: {}
      vpcsubnet: {}
      vulnerabilitycategory: {}
      wereanystepsoractionstakenthatmighthaveinhibitedtherecovery: {}
      whatadditionaltoolsorresourcesareneededtodetectanalyzeandmitigatefutureincidents: {}
      whataretheareasthatneedimprovement: {}
      whatcorrectiveactionscanpreventsimilarincidentsinthefuture: {}
      whatinformationwasneededsooner: {}
      whatprecursorsorindicatorsshouldbewatchedforinthefuturetodetectsimilarincidents: {}
      whatwasthescopeoftheincident: {}
      whatwastheworkperformedduringrecovery: {}
      whatweretheareaswherethecirtteamswereeffective: {}
      whatwouldthestaffandmanagementdodifferentlythenexttimeasimilarincidentoccurs: {}
      whenwastheproblemfirstdetectedandbywhom: {}
      whereisdatahosted: {}
      xdralertcount: {}
      xdralerts: {}
      xdrassigneduseremail: {}
      xdrassigneduserprettyname: {}
      xdrdescription: {}
      xdrdetectiontime: {}
      xdrfileartifacts: {}
      xdrhighseverityalertcount: {}
      xdrhostcount: {}
      xdrincidentid: {}
      xdrlowseverityalertcount: {}
      xdrmediumseverityalertcount: {}
      xdrnetworkartifacts: {}
      xdrnotes: {}
      xdrresolvecomment: {}
      xdrstatus: {}
      xdrurl: {}
      xdrusercount: {}
      xsoarremediationcli: {}
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: Change the properties of an incident
      id: 516c6327-0a23-49e3-837c-dd9ba83d2ebe
      iscommand: true
      name: Advanced Mapping
      script: Builtin|||setIncident
      type: regular
      version: -1
    taskid: 516c6327-0a23-49e3-837c-dd9ba83d2ebe
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": -930,
          "y": 1320
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 2255,
        "width": 3470,
        "x": -930,
        "y": -180
      }
    }
  }
tests:
- No tests (auto formatted)
fromversion: 6.0.0
