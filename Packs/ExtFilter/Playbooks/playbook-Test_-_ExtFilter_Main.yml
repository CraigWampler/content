id: c385868a-cc48-4c9c-88b5-7e462d63ff40
version: -1
vcShouldKeepItemLegacyProdMachine: false
name: Test - ExtFilter Main
description: Run Test Suite for ExtFilter
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 91064668-f9fe-4388-845d-05ecec920aa7
    type: start
    task:
      id: 91064668-f9fe-4388-845d-05ecec920aa7
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "3"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "3":
    id: "3"
    taskid: 04fb8e2a-3b92-40a4-8b48-7d72abb6f0de
    type: regular
    task:
      id: 04fb8e2a-3b92-40a4-8b48-7d72abb6f0de
      version: -1
      name: Cleanup ContextData
      description: Delete field from context
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "17"
    scriptarguments:
      all:
        simple: "yes"
      index: {}
      key: {}
      keysToKeep: {}
      subplaybook: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 195
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "17":
    id: "17"
    taskid: 43b140f7-084a-4400-8d7b-0c01b7aa1fb9
    type: playbook
    task:
      id: 43b140f7-084a-4400-8d7b-0c01b7aa1fb9
      version: -1
      name: matches conditions of
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "18"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "CSV": [{
                          "ActivityName": "File uploaded",
                          "DeviceID": "D000001"
                        }, {
                          "ActivityName": "User Logged In - Failed",
                          "DeviceID": "D000003"
                        }
                      ],
                      "TrustedDevices": ["D000002", "D000003"]
                    }
          - operator: ParseJSON
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    [
                      {
                        "ActivityName": {
                          "==": "User Logged In - Failed"
                        }
                      },
                      "or",
                      [
                        {
                          "ActivityName": {
                            "in list": "File uploaded,File downloaded"
                          }
                        },
                        "and",
                        "not",
                        {
                          "DeviceID": {
                            "matches any string of": "${Input.TrustedDevices}"
                          }
                        }
                      ]
                    ]
      ExtFilterOperation:
        simple: matches conditions of
      ExtFilterPath:
        simple: CSV
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "TrustedDevices": ["D000002","D000003"],
                      "CSV": [
                        {
                          "ActivityName": "User Logged In - Success",
                          "DeviceID": "D000001"
                        },
                        {
                          "ActivityName": "File uploaded",
                          "DeviceID": "D000001"
                        },
                        {
                          "ActivityName": "File downloaded",
                          "DeviceID": "D000002"
                        },
                        {
                          "ActivityName": "User Logged In - Failed",
                          "DeviceID": "D000003"
                        }
                      ]
                    }
          - operator: ParseJSON
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 370
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "18":
    id: "18"
    taskid: 19cdc401-3960-484a-8078-48a532612daf
    type: playbook
    task:
      id: 19cdc401-3960-484a-8078-48a532612daf
      version: -1
      name: is filtered by
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "19"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "Contents": {
                        "File": [
                          {
                            "Name": "b.exe",
                            "Size": 200
                          }
                        ],
                        "Host": [
                          {
                            "Name": "computer1",
                            "IP": "1.1.1.1"
                          },
                          {
                            "Name": "computer2",
                            "IP": "2.2.2.2"
                          }
                        ]
                      }
                    }
          - operator: ParseJSON
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "Name": {
                        "ends with": ".exe"
                      }
                    }
      ExtFilterOperation:
        simple: is filtered by
      ExtFilterPath:
        simple: Contents.File
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "Contents": {
                        "File": [
                          {
                            "Name": "a.dat",
                            "Size": 100
                          },
                          {
                            "Name": "b.exe",
                            "Size": 200
                          },
                          {
                            "Name": "c.txt",
                            "Size": 300
                          }
                        ],
                        "Host": [
                          {
                            "Name": "computer1",
                            "IP": "1.1.1.1"
                          },
                          {
                            "Name": "computer2",
                            "IP": "2.2.2.2"
                          }
                        ]
                      }
                    }
          - operator: ParseJSON
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 545
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "19":
    id: "19"
    taskid: aafba8ca-5281-40e1-89a6-30c7b15f90f7
    type: playbook
    task:
      id: aafba8ca-5281-40e1-89a6-30c7b15f90f7
      version: -1
      name: value matches conditions of
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "20"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "Autofocus": {
                        "detected": true,
                        "version": 456
                      }
                    }
          - operator: ParseJSON
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "detected": {
                        "==": true
                      }
                    }
      ExtFilterOperation:
        simple: value matches conditions of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "Trendmicro": {
                        "detected": false,
                        "version": 123
                      },
                      "Autofocus": {
                        "detected": true,
                        "version": 456
                      },
                      "XXX": {
                        "version": 789
                      }
                    }
          - operator: ParseJSON
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 720
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "20":
    id: "20"
    taskid: 2a3d82f9-065d-4407-86ca-def215520131
    type: playbook
    task:
      id: 2a3d82f9-065d-4407-86ca-def215520131
      version: -1
      name: Filter for nested array
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "21"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "Node2" : {
                        "Node1a" : [
                          "aaa"
                        ],
                        "Node1b": [
                          "xxx"
                        ]
                      }
                    }
          - operator: ParseJSON
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "Node2.Node1a": {
                        "is filtered by": {
                          "": {
                            "contains": "aaa"
                          }
                        }
                      }
                    }
      ExtFilterOperation:
        simple: matches conditions of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "Node2" : {
                        "Node1a" : [
                          "aaa",
                          "bbb",
                          "ccc"
                        ],
                        "Node1b" : [
                          "xxx"
                        ]
                      }
                    }
          - operator: ParseJSON
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 895
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "21":
    id: "21"
    taskid: adc14456-a5fb-4cbc-882f-919b5075ea8b
    type: playbook
    task:
      id: adc14456-a5fb-4cbc-882f-919b5075ea8b
      version: -1
      name: Wildcard Filter
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "22"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    [
                      {
                        "IP": "1.1.1.1",
                        "Host": "COMPUTER1",
                        "User": "MAOKI"
                      }
                    ]
          - operator: ParseJSON
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "Host" : {
                        "matches wildcard": "COMPUTER*"
                      }
                    }
      ExtFilterOperation:
        simple: matches conditions of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    [
                      {
                        "IP": "1.1.1.1",
                        "Host": "COMPUTER1",
                        "User": "MAOKI"
                      },
                      {
                        "IP": "2.2.2.2",
                        "Host": "SERVER2",
                        "User": "NGOTOH"
                      }
                    ]
          - operator: ParseJSON
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1070
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "22":
    id: "22"
    taskid: 07a66e20-d984-40b5-8861-58d337c1e0d4
    type: playbook
    task:
      id: 07a66e20-d984-40b5-8861-58d337c1e0d4
      version: -1
      name: Regex Filter
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "23"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    [
                      {
                        "IP": "1.1.1.1",
                        "Host": "COMPUTER1",
                        "User": "MAOKI"
                      }
                    ]
          - operator: ParseJSON
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "Host" : {
                        "matches regex": "COMPUTER.*"
                      }
                    }
      ExtFilterOperation:
        simple: matches conditions of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    [
                      {
                        "IP": "1.1.1.1",
                        "Host": "COMPUTER1",
                        "User": "MAOKI"
                      },
                      {
                        "IP": "2.2.2.2",
                        "Host": "SERVER2",
                        "User": "NGOTOH"
                      }
                    ]
          - operator: ParseJSON
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1245
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "23":
    id: "23"
    taskid: 44ee4110-be89-4fb5-8975-b4832ccf61c8
    type: playbook
    task:
      id: 44ee4110-be89-4fb5-8975-b4832ccf61c8
      version: -1
      name: Complex Filters 1
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "24"
    scriptarguments:
      ExpectedOutput:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "COMPXX1": {
                        "Log": [
                          {
                            "date": "2020-10-01 00:00:01 JST",
                            "type": "alert",
                            "desc": "C2 detection",
                            "protocol": "https",
                            "ip.src": "192.168.0.1",
                            "ip.dst": "2.2.2.2",
                            "port.src": 12345,
                            "port.dst": 443,
                            "risk.score": 40,
                            "message": "xxxxxxxxxxxx"
                          }
                        ],
                        "IP": "192.168.0.1",
                        "UserName": "NAOKI",
                        "RiskScore": 40
                      },
                      "SRVXYY1": {
                        "Log": [
                          {
                            "date": "2020-10-01 00:00:01 JST",
                            "type": "alert",
                            "desc": "C2 detection",
                            "protocol": "https",
                            "ip.src": "192.168.0.2",
                            "ip.dst": "2.2.2.2",
                            "port.src": 12345,
                            "port.dst": 443,
                            "risk.score": 30,
                            "message": "xxxxxxxxxxxx"
                          },
                          {
                            "date": "2020-10-01 00:00:03 JST",
                            "type": "event",
                            "desc": "access",
                            "protocol": "ssh",
                            "ip.src": "192.168.0.2",
                            "ip.dst": "4.4.4.4",
                            "port.src": 12345,
                            "port.dst": 22,
                            "risk.score": 0,
                            "message": "xxxxxxxxxxxx"
                          }
                        ],
                        "IP": "192.168.0.2",
                        "UserName": "TGOTOH",
                        "RiskScore": 10
                      }
                    }
          - operator: ParseJSON
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    [
                      {
                        "Log": {
                          "is filtered by" : [
                            {
                              "risk.score": {
                                ">=": 20, "<=": 50
                              }
                            },
                            "or",
                            {
                              "protocol": {
                                "==": "ssh"
                              }
                            }
                          ]
                        }
                      },
                      "and",
                      {
                        "RiskScore": {
                          ">=" : 10
                        }
                      }
                    ]
      ExtFilterOperation:
        simple: value matches conditions of
      ExtFilterPath: {}
      Input:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "COMPXX1": {
                        "Log": [
                          {
                            "date": "2020-10-01 00:00:01 JST",
                            "type": "alert",
                            "desc": "C2 detection",
                            "protocol": "https",
                            "ip.src": "192.168.0.1",
                            "ip.dst": "2.2.2.2",
                            "port.src": 12345,
                            "port.dst": 443,
                            "risk.score": 40,
                            "message": "xxxxxxxxxxxx"
                          },
                          {
                            "date": "2020-10-01 00:00:02 JST",
                            "type": "alert",
                            "desc": "C2 detection",
                            "protocol": "https",
                            "ip.src": "192.168.0.1",
                            "ip.dst": "3.3.3.3",
                            "port.src": 12345,
                            "port.dst": 443,
                            "risk.score": 60,
                            "message": "xxxxxxxxxxxx"
                          },
                          {
                            "date": "2020-10-01 00:00:03 JST",
                            "type": "event",
                            "desc": "access",
                            "protocol": "https",
                            "ip.src": "192.168.0.1",
                            "ip.dst": "4.4.4.4",
                            "port.src": 12345,
                            "port.dst": 443,
                            "risk.score": 0,
                            "message": "xxxxxxxxxxxx"
                          }
                        ],
                        "IP": "192.168.0.1",
                        "UserName": "NAOKI",
                        "RiskScore": 40
                      },
                      "SRVXYY1": {
                        "Log": [
                          {
                            "date": "2020-10-01 00:00:01 JST",
                            "type": "alert",
                            "desc": "C2 detection",
                            "protocol": "https",
                            "ip.src": "192.168.0.2",
                            "ip.dst": "2.2.2.2",
                            "port.src": 12345,
                            "port.dst": 443,
                            "risk.score": 30,
                            "message": "xxxxxxxxxxxx"
                          },
                          {
                            "date": "2020-10-01 00:00:02 JST",
                            "type": "event",
                            "desc": "access",
                            "protocol": "https",
                            "ip.src": "192.168.0.2",
                            "ip.dst": "3.3.3.3",
                            "port.src": 12345,
                            "port.dst": 443,
                            "risk.score": 0,
                            "message": "xxxxxxxxxxxx"
                          },
                          {
                            "date": "2020-10-01 00:00:03 JST",
                            "type": "event",
                            "desc": "access",
                            "protocol": "ssh",
                            "ip.src": "192.168.0.2",
                            "ip.dst": "4.4.4.4",
                            "port.src": 12345,
                            "port.dst": 22,
                            "risk.score": 0,
                            "message": "xxxxxxxxxxxx"
                          }
                        ],
                        "IP": "192.168.0.2",
                        "UserName": "TGOTOH",
                        "RiskScore": 10
                      },
                      "SRVXZZ2": {
                        "Log": [
                          {
                            "date": "2020-10-01 00:00:03 JST",
                            "type": "event",
                            "desc": "access",
                            "protocol": "https",
                            "ip.src": "192.168.0.3",
                            "ip.dst": "4.4.4.4",
                            "port.src": 12345,
                            "port.dst": 443,
                            "risk.score": 0,
                            "message": "xxxxxxxxxxxx"
                          }
                        ],
                        "IP": "192.168.0.3",
                        "UserName": "GMACHIDA",
                        "RiskScore": 0
                      }
                    }
          - operator: ParseJSON
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1410
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
  "24":
    id: "24"
    taskid: f72cdee8-cd8b-4ba7-814e-738db6802e05
    type: playbook
    task:
      id: f72cdee8-cd8b-4ba7-814e-738db6802e05
      version: -1
      name: Filter by incident fields
      playbookName: Test - ExtFilter
      type: playbook
      iscommand: false
      brand: ""
    scriptarguments:
      ExpectedOutput:
        simple: |-
          {
            "aaa": [
              "bbb",
              "${incident.name}"
            ]
          }
      ExtFilterFilter:
        complex:
          root: ${
          accessor: =}
          transformers:
          - operator: concat
            args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    {
                      "includes": "${incident.name}"
                    }
      ExtFilterOperation:
        simple: value is filtered by
      ExtFilterPath: {}
      Input:
        simple: |-
          {
            "aaa": [
              "bbb",
              "${incident.name}"
            ],
            "xxx": [
              "yyy",
              "zzz"
            ]
          }
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
      max: 100
    view: |-
      {
        "position": {
          "x": 50,
          "y": 1590
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1635,
        "width": 380,
        "x": 50,
        "y": 50
      }
    }
  }
inputs: []
outputs: []
sourceplaybookid: d9d715b7-2600-4535-8bfd-0978ff593976
